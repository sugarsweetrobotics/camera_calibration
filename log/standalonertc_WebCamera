Oct 16 05:37:42.994 INFO: manager: 1.1.1
Oct 16 05:37:42.995 INFO: manager: Copyright (C) 2003-2012
Oct 16 05:37:42.995 INFO: manager:   Noriaki Ando
Oct 16 05:37:42.995 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 05:37:42.995 INFO: manager: Manager starting.
Oct 16 05:37:42.995 INFO: manager: Starting local logging.
Oct 16 05:37:42.995 TRACE: manager: Manager::initORB()
Oct 16 05:37:42.995 DEBUG: manager: corba.args: 
Oct 16 05:37:42.995 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 19254
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu.local
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 05:37:42.995 DEBUG: manager: corba.endpoint: 
Oct 16 05:37:42.995 DEBUG: manager: manager.is_master: NO
Oct 16 05:37:42.995 DEBUG: manager: corba.id: omniORB
Oct 16 05:37:42.996 TRACE: manager: Manager::initNaming()
Oct 16 05:37:42.996 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 05:37:42.996 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 05:37:42.996 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 05:37:42.996 TRACE: manager: Manager::getORB()
Oct 16 05:37:43.006 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 05:37:43.006 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 05:37:43.006 TRACE: manager: Manager::initFactories()
Oct 16 05:37:43.006 TRACE: manager: Manager::initExecContext()
Oct 16 05:37:43.006 TRACE: manager: Manager::initComposite()
Oct 16 05:37:43.006 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 05:37:43.006 TRACE: manager: Manager::initManagerServant()
Oct 16 05:37:43.006 TRACE: ManagerServant: This manager is slave.
Oct 16 05:37:43.006 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 05:37:43.007 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 05:37:43.007 TRACE: manager: Manager::getORB()
Oct 16 05:37:43.008 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 05:37:43.008 INFO: ManagerServant: Master manager not found
Oct 16 05:37:43.008 TRACE: manager: Manager::activateManager()
Oct 16 05:37:43.008 TRACE: manager: Manager::getPOAManager()
Oct 16 05:37:43.008 TRACE: manager: Manager::getPOAManager()
Oct 16 05:37:43.008 TRACE: manager: POA Manager activated.
Oct 16 05:37:43.008 TRACE: manager: Manager::initLocalService()
Oct 16 05:37:43.008 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 05:37:43.008 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 05:37:43.008 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 05:37:43.008 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 05:37:43.008 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 05:37:43.008 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 05:37:43.008 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 05:37:43.009 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 05:37:43.009 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 05:37:43.009 TRACE: manager: RTC basic propfile vendor: 
Oct 16 05:37:43.009 TRACE: manager: RTC basic propfile category: 
Oct 16 05:37:43.009 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 05:37:43.009 TRACE: manager: RTC basic propfile version: 
Oct 16 05:37:43.009 TRACE: manager: Manager::getORB()
Oct 16 05:37:43.009 TRACE: manager: Manager::getPOA()
Oct 16 05:37:43.010 TRACE: manager: Manager::getORB()
Oct 16 05:37:43.010 TRACE: manager: Manager::getPOA()
Oct 16 05:37:43.010 TRACE: : getProperties()
Oct 16 05:37:43.010 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 05:37:43.010 TRACE: : getProperties()
Oct 16 05:37:43.010 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 05:37:43.010 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 05:37:43.010 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 05:37:43.010 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 05:37:43.010 DEBUG: CameraImage: Port name: CameraImage
Oct 16 05:37:43.010 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 05:37:43.010 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 05:37:43.010 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 05:37:43.010 TRACE: : setProperties()
Oct 16 05:37:43.010 TRACE: : getTypeName()
Oct 16 05:37:43.010 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 05:37:43.010 TRACE: manager: RTC created: WebCamera
Oct 16 05:37:43.010 TRACE: WebCamera0: getCategory()
Oct 16 05:37:43.010 TRACE: WebCamera0: getTypeName()
Oct 16 05:37:43.010 TRACE: WebCamera0: getInstanceName()
Oct 16 05:37:43.011 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 05:37:43.011 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 05:37:43.011 TRACE: WebCamera0: setProperties()
Oct 16 05:37:43.011 TRACE: WebCamera0: setProperties()
Oct 16 05:37:43.011 TRACE: WebCamera0: getProperties()
Oct 16 05:37:43.011 TRACE: WebCamera0: getProperties()
Oct 16 05:37:43.011 TRACE: WebCamera0: getProperties()
Oct 16 05:37:43.011 TRACE: WebCamera0: getProperties()
Oct 16 05:37:43.011 TRACE: WebCamera0: initialize()
Oct 16 05:37:43.011 DEBUG: WebCamera0: getContextOptions()
Oct 16 05:37:43.011 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 05:37:43.011 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 05:37:43.011 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 05:37:43.011 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 05:37:43.011 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 05:37:43.011 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 05:37:43.011 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 05:37:43.011 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 05:37:43.011 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 05:37:43.011 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 05:37:43.011 TRACE: periodic_ecprofile: setObjRef()
Oct 16 05:37:43.011 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 05:37:43.011 TRACE: ec_base: setRate(1000000.000000)
Oct 16 05:37:43.011 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 05:37:43.011 INFO: ec_base: setRate(1000000.000000) done
Oct 16 05:37:43.011 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 05:37:43.011 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 05:37:43.011 TRACE: ec_base: init()
Oct 16 05:37:43.011 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:37:43.011 TRACE: ec_base: setRate(30.000000)
Oct 16 05:37:43.011 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 05:37:43.011 INFO: ec_base: setRate(30.000000) done
Oct 16 05:37:43.011 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 05:37:43.011 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 05:37:43.011 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 05:37:43.011 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 05:37:43.011 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 05:37:43.011 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 05:37:43.011 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 05:37:43.011 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 05:37:43.011 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 05:37:43.011 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 05:37:43.011 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 05:37:43.011 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 05:37:43.011 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 05:37:43.011 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 05:37:43.011 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 05:37:43.011 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 05:37:43.011 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 05:37:43.011 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 05:37:43.011 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 05:37:43.011 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 05:37:43.011 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 05:37:43.011 TRACE: periodic_ecprofile: setProperties()
Oct 16 05:37:43.011 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:37:43.011 TRACE: ec_worker: bindComponent()
Oct 16 05:37:43.011 TRACE: WebCamera0: bindContext()
Oct 16 05:37:43.011 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 05:37:43.011 TRACE: WebCamera0: getObjRef()
Oct 16 05:37:43.011 TRACE: manager: Manager::getPOA()
Oct 16 05:37:43.011 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 05:37:43.011 INFO: WebCamera0: 1 execution context was created.
Oct 16 05:37:43.011 TRACE: WebCamera0: on_initialize()
Oct 16 05:37:43.011 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 05:37:43.011 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 05:37:43.011 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:37:43.011 TRACE: WebCamera0: getObjRef()
Oct 16 05:37:43.011 TRACE: WebCamera0: get_component_profile()
Oct 16 05:37:43.011 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 05:37:43.011 TRACE: CameraImage: getPortProfile()
Oct 16 05:37:43.011 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 05:37:43.011 TRACE: CameraImage: getPortRef()
Oct 16 05:37:43.011 TRACE: CameraImage: getProfile()
Oct 16 05:37:43.011 TRACE: CameraImage: init()
Oct 16 05:37:43.011 DEBUG: CameraImage: : 

Oct 16 05:37:43.011 DEBUG: CameraImage: : 

Oct 16 05:37:43.012 TRACE: CameraImage: initConsumers()
Oct 16 05:37:43.012 TRACE: CameraImage: initProviders()
Oct 16 05:37:43.012 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 05:37:43.012 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 05:37:43.012 TRACE: manager: Manager::getPOA()
Oct 16 05:37:43.012 TRACE: manager: Manager::getPOA()
Oct 16 05:37:43.012 TRACE: manager: Manager::getPOA()
Oct 16 05:37:43.013 TRACE: manager: Manager::getORB()
Oct 16 05:37:43.013 TRACE: manager: Manager::getPOA()
Oct 16 05:37:43.013 TRACE: manager: Manager::getPOA()
Oct 16 05:37:43.013 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 05:37:43.013 TRACE: CameraCaptureService: init()
Oct 16 05:37:43.013 DEBUG: CameraCaptureService: : 

Oct 16 05:37:43.013 DEBUG: CameraCaptureService: : 

Oct 16 05:37:43.013 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:37:43.013 TRACE: WebCamera0: getObjRef()
Oct 16 05:37:43.013 TRACE: WebCamera0: get_component_profile()
Oct 16 05:37:43.013 TRACE: CameraImage: get_port_profile()
Oct 16 05:37:43.013 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 05:37:43.013 TRACE: CameraCaptureService: getPortProfile()
Oct 16 05:37:43.013 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 05:37:43.013 TRACE: CameraImage: get_port_profile()
Oct 16 05:37:43.013 TRACE: CameraCaptureService: getPortRef()
Oct 16 05:37:43.013 TRACE: CameraCaptureService: getProfile()
Oct 16 05:37:43.013 TRACE: CameraImage: getProfile()
Oct 16 05:37:43.013 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 05:37:43.013 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 05:37:43.013 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 05:37:43.013 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 05:37:43.013 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 05:37:43.013 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 05:37:43.013 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 05:37:43.013 TRACE: WebCamera0: updateParameters(default)
Oct 16 05:37:43.013 TRACE: WebCamera0: getInstanceName()
Oct 16 05:37:43.013 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 05:37:43.013 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 05:37:43.013 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 05:37:43.013 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 05:37:43.013 DEBUG: WebCamera0: EC[0] starting.
Oct 16 05:37:43.013 TRACE: ec_base: start()
Oct 16 05:37:43.013 TRACE: ec_worker: start()
Oct 16 05:37:43.013 TRACE: WebCamera0: on_startup(0)
Oct 16 05:37:43.013 TRACE: WebCamera0: onStartup(0)
Oct 16 05:37:43.013 DEBUG: ec_worker: 1 components started.
Oct 16 05:37:43.013 TRACE: periodic_ec: open()
Oct 16 05:37:43.013 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 05:37:43.013 TRACE: WebCamera0: getInstanceName()
Oct 16 05:37:43.013 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 05:37:43.013 TRACE: WebCamera0: getInstanceName()
Oct 16 05:37:43.013 TRACE: WebCamera0: getNamingNames()

Oct 16 05:37:43.013 TRACE: periodic_ec: Oct 16 05:37:43.013 TRACE: manager: svc()Bind name: WebCamera0.rtc

Oct 16 05:37:43.013 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 05:37:43.013 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 05:37:43.013 TRACE: WebCamera0: getObjRef()
Oct 16 05:37:43.014 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 05:37:43.703 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 05:37:43.703 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 05:37:53.260 TRACE: NamingManager: NamingManager::update()
Oct 16 05:37:53.260 TRACE: NamingOnCorba: isAlive()
Oct 16 05:37:55.287 TRACE: WebCamera0: get_component_profile()
Oct 16 05:37:55.287 TRACE: CameraImage: get_port_profile()
Oct 16 05:37:55.287 TRACE: CameraCaptureService: get_port_profile()
Oct 16 05:37:56.817 TRACE: WebCamera0: get_component_profile()
Oct 16 05:37:56.817 TRACE: CameraImage: get_port_profile()
Oct 16 05:37:56.817 TRACE: CameraCaptureService: get_port_profile()
Oct 16 05:38:03.523 TRACE: NamingManager: NamingManager::update()
Oct 16 05:38:03.523 TRACE: NamingOnCorba: isAlive()
Oct 16 05:47:51.909 INFO: manager: 1.1.1
Oct 16 05:47:51.909 INFO: manager: Copyright (C) 2003-2012
Oct 16 05:47:51.909 INFO: manager:   Noriaki Ando
Oct 16 05:47:51.909 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 05:47:51.909 INFO: manager: Manager starting.
Oct 16 05:47:51.909 INFO: manager: Starting local logging.
Oct 16 05:47:51.909 TRACE: manager: Manager::initORB()
Oct 16 05:47:51.909 DEBUG: manager: corba.args: 
Oct 16 05:47:51.909 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 19301
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu.local
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 05:47:51.909 DEBUG: manager: corba.endpoint: 
Oct 16 05:47:51.909 DEBUG: manager: manager.is_master: NO
Oct 16 05:47:51.909 DEBUG: manager: corba.id: omniORB
Oct 16 05:47:51.910 TRACE: manager: Manager::initNaming()
Oct 16 05:47:51.910 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 05:47:51.910 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 05:47:51.910 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 05:47:51.910 TRACE: manager: Manager::getORB()
Oct 16 05:47:51.919 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 05:47:51.919 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 05:47:51.919 TRACE: manager: Manager::initFactories()
Oct 16 05:47:51.919 TRACE: manager: Manager::initExecContext()
Oct 16 05:47:51.919 TRACE: manager: Manager::initComposite()
Oct 16 05:47:51.919 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 05:47:51.919 TRACE: manager: Manager::initManagerServant()
Oct 16 05:47:51.919 TRACE: ManagerServant: This manager is slave.
Oct 16 05:47:51.919 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 05:47:51.920 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 05:47:51.920 TRACE: manager: Manager::getORB()
Oct 16 05:47:51.920 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 05:47:51.920 INFO: ManagerServant: Master manager not found
Oct 16 05:47:51.920 TRACE: manager: Manager::activateManager()
Oct 16 05:47:51.920 TRACE: manager: Manager::getPOAManager()
Oct 16 05:47:51.920 TRACE: manager: Manager::getPOAManager()
Oct 16 05:47:51.920 TRACE: manager: POA Manager activated.
Oct 16 05:47:51.920 TRACE: manager: Manager::initLocalService()
Oct 16 05:47:51.920 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 05:47:51.920 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 05:47:51.920 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 05:47:51.920 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 05:47:51.920 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 05:47:51.920 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 05:47:51.920 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 05:47:51.920 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 05:47:51.920 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 05:47:51.921 TRACE: manager: RTC basic propfile vendor: 
Oct 16 05:47:51.921 TRACE: manager: RTC basic propfile category: 
Oct 16 05:47:51.921 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 05:47:51.921 TRACE: manager: RTC basic propfile version: 
Oct 16 05:47:51.921 TRACE: manager: Manager::getORB()
Oct 16 05:47:51.921 TRACE: manager: Manager::getPOA()
Oct 16 05:47:51.921 TRACE: manager: Manager::getORB()
Oct 16 05:47:51.921 TRACE: manager: Manager::getPOA()
Oct 16 05:47:51.921 TRACE: : getProperties()
Oct 16 05:47:51.921 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 05:47:51.921 TRACE: : getProperties()
Oct 16 05:47:51.921 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 05:47:51.921 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 05:47:51.921 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 05:47:51.921 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 05:47:51.921 DEBUG: CameraImage: Port name: CameraImage
Oct 16 05:47:51.921 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 05:47:51.921 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 05:47:51.921 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 05:47:51.921 TRACE: : setProperties()
Oct 16 05:47:51.921 TRACE: : getTypeName()
Oct 16 05:47:51.921 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 05:47:51.921 TRACE: manager: RTC created: WebCamera
Oct 16 05:47:51.921 TRACE: WebCamera0: getCategory()
Oct 16 05:47:51.921 TRACE: WebCamera0: getTypeName()
Oct 16 05:47:51.921 TRACE: WebCamera0: getInstanceName()
Oct 16 05:47:51.921 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 05:47:51.921 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 05:47:51.921 TRACE: WebCamera0: setProperties()
Oct 16 05:47:51.921 TRACE: WebCamera0: setProperties()
Oct 16 05:47:51.921 TRACE: WebCamera0: getProperties()
Oct 16 05:47:51.921 TRACE: WebCamera0: getProperties()
Oct 16 05:47:51.921 TRACE: WebCamera0: getProperties()
Oct 16 05:47:51.921 TRACE: WebCamera0: getProperties()
Oct 16 05:47:51.921 TRACE: WebCamera0: initialize()
Oct 16 05:47:51.921 DEBUG: WebCamera0: getContextOptions()
Oct 16 05:47:51.921 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 05:47:51.922 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 05:47:51.922 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 05:47:51.922 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 05:47:51.922 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 05:47:51.922 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 05:47:51.922 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 05:47:51.922 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 05:47:51.922 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 05:47:51.922 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 05:47:51.922 TRACE: periodic_ecprofile: setObjRef()
Oct 16 05:47:51.922 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 05:47:51.922 TRACE: ec_base: setRate(1000000.000000)
Oct 16 05:47:51.922 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 05:47:51.922 INFO: ec_base: setRate(1000000.000000) done
Oct 16 05:47:51.922 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 05:47:51.922 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 05:47:51.922 TRACE: ec_base: init()
Oct 16 05:47:51.922 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:47:51.922 TRACE: ec_base: setRate(30.000000)
Oct 16 05:47:51.922 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 05:47:51.922 INFO: ec_base: setRate(30.000000) done
Oct 16 05:47:51.922 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 05:47:51.922 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 05:47:51.922 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 05:47:51.922 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 05:47:51.922 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 05:47:51.922 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 05:47:51.922 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 05:47:51.922 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 05:47:51.922 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 05:47:51.922 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 05:47:51.922 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 05:47:51.922 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 05:47:51.922 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 05:47:51.922 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 05:47:51.922 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 05:47:51.922 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 05:47:51.922 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 05:47:51.922 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 05:47:51.922 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 05:47:51.922 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 05:47:51.922 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 05:47:51.922 TRACE: periodic_ecprofile: setProperties()
Oct 16 05:47:51.922 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:47:51.922 TRACE: ec_worker: bindComponent()
Oct 16 05:47:51.922 TRACE: WebCamera0: bindContext()
Oct 16 05:47:51.922 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 05:47:51.922 TRACE: WebCamera0: getObjRef()
Oct 16 05:47:51.922 TRACE: manager: Manager::getPOA()
Oct 16 05:47:51.922 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 05:47:51.922 INFO: WebCamera0: 1 execution context was created.
Oct 16 05:47:51.922 TRACE: WebCamera0: on_initialize()
Oct 16 05:47:51.922 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 05:47:51.922 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 05:47:51.922 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:47:51.922 TRACE: WebCamera0: getObjRef()
Oct 16 05:47:51.922 TRACE: WebCamera0: get_component_profile()
Oct 16 05:47:51.922 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 05:47:51.922 TRACE: CameraImage: getPortProfile()
Oct 16 05:47:51.922 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 05:47:51.922 TRACE: CameraImage: getPortRef()
Oct 16 05:47:51.922 TRACE: CameraImage: getProfile()
Oct 16 05:47:51.922 TRACE: CameraImage: init()
Oct 16 05:47:51.922 DEBUG: CameraImage: : 

Oct 16 05:47:51.922 DEBUG: CameraImage: : 

Oct 16 05:47:51.922 TRACE: CameraImage: initConsumers()
Oct 16 05:47:51.922 TRACE: CameraImage: initProviders()
Oct 16 05:47:51.922 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 05:47:51.922 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 05:47:51.922 TRACE: manager: Manager::getPOA()
Oct 16 05:47:51.922 TRACE: manager: Manager::getPOA()
Oct 16 05:47:51.922 TRACE: manager: Manager::getPOA()
Oct 16 05:47:51.922 TRACE: manager: Manager::getORB()
Oct 16 05:47:51.922 TRACE: manager: Manager::getPOA()
Oct 16 05:47:51.922 TRACE: manager: Manager::getPOA()
Oct 16 05:47:51.922 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 05:47:51.922 TRACE: CameraCaptureService: init()
Oct 16 05:47:51.922 DEBUG: CameraCaptureService: : 

Oct 16 05:47:51.922 DEBUG: CameraCaptureService: : 

Oct 16 05:47:51.922 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:47:51.922 TRACE: WebCamera0: getObjRef()
Oct 16 05:47:51.922 TRACE: WebCamera0: get_component_profile()
Oct 16 05:47:51.922 TRACE: CameraImage: get_port_profile()
Oct 16 05:47:51.922 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 05:47:51.922 TRACE: CameraCaptureService: getPortProfile()
Oct 16 05:47:51.922 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 05:47:51.922 TRACE: CameraImage: get_port_profile()
Oct 16 05:47:51.922 TRACE: CameraCaptureService: getPortRef()
Oct 16 05:47:51.922 TRACE: CameraCaptureService: getProfile()
Oct 16 05:47:51.922 TRACE: CameraImage: getProfile()
Oct 16 05:47:51.922 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 05:47:51.922 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 05:47:51.922 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 05:47:51.922 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 05:47:51.922 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 05:47:51.922 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 05:47:51.922 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 05:47:51.922 TRACE: WebCamera0: updateParameters(default)
Oct 16 05:47:51.922 TRACE: WebCamera0: getInstanceName()
Oct 16 05:47:51.922 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 05:47:51.922 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 05:47:51.922 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 05:47:51.922 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 05:47:51.922 DEBUG: WebCamera0: EC[0] starting.
Oct 16 05:47:51.922 TRACE: ec_base: start()
Oct 16 05:47:51.922 TRACE: ec_worker: start()
Oct 16 05:47:51.922 TRACE: WebCamera0: on_startup(0)
Oct 16 05:47:51.922 TRACE: WebCamera0: onStartup(0)
Oct 16 05:47:51.922 DEBUG: ec_worker: 1 components started.
Oct 16 05:47:51.922 TRACE: periodic_ec: open()
Oct 16 05:47:51.923 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 05:47:51.923 TRACE: WebCamera0: getInstanceName()
Oct 16 05:47:51.923 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 05:47:51.923 TRACE: WebCamera0: getInstanceName()
Oct 16 05:47:51.923 TRACE: periodic_ec: svc()

Oct 16 05:47:51.923 TRACE: WebCamera0: getNamingNames()
Oct 16 05:47:51.923 TRACE: manager: Bind name: WebCamera0.rtc
Oct 16 05:47:51.923 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 05:47:51.923 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 05:47:51.923 TRACE: WebCamera0: getObjRef()
Oct 16 05:47:51.923 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 05:47:52.552 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 05:47:52.552 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 05:48:02.162 TRACE: NamingManager: NamingManager::update()
Oct 16 05:48:02.162 TRACE: NamingOnCorba: isAlive()
Oct 16 05:50:38.917 INFO: manager: 1.1.1
Oct 16 05:50:38.920 INFO: manager: Copyright (C) 2003-2012
Oct 16 05:50:38.920 INFO: manager:   Noriaki Ando
Oct 16 05:50:38.920 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 05:50:38.920 INFO: manager: Manager starting.
Oct 16 05:50:38.920 INFO: manager: Starting local logging.
Oct 16 05:50:38.920 TRACE: manager: Manager::initORB()
Oct 16 05:50:38.920 DEBUG: manager: corba.args: 
Oct 16 05:50:38.920 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 19326
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu.local
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 05:50:38.920 DEBUG: manager: corba.endpoint: 
Oct 16 05:50:38.920 DEBUG: manager: manager.is_master: NO
Oct 16 05:50:38.920 DEBUG: manager: corba.id: omniORB
Oct 16 05:50:38.921 TRACE: manager: Manager::initNaming()
Oct 16 05:50:38.921 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 05:50:38.921 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 05:50:38.921 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 05:50:38.921 TRACE: manager: Manager::getORB()
Oct 16 05:50:38.930 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 05:50:38.930 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 05:50:38.930 TRACE: manager: Manager::initFactories()
Oct 16 05:50:38.930 TRACE: manager: Manager::initExecContext()
Oct 16 05:50:38.930 TRACE: manager: Manager::initComposite()
Oct 16 05:50:38.930 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 05:50:38.930 TRACE: manager: Manager::initManagerServant()
Oct 16 05:50:38.930 TRACE: ManagerServant: This manager is slave.
Oct 16 05:50:38.930 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 05:50:38.931 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 05:50:38.931 TRACE: manager: Manager::getORB()
Oct 16 05:50:38.931 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 05:50:38.931 INFO: ManagerServant: Master manager not found
Oct 16 05:50:38.931 TRACE: manager: Manager::activateManager()
Oct 16 05:50:38.931 TRACE: manager: Manager::getPOAManager()
Oct 16 05:50:38.931 TRACE: manager: Manager::getPOAManager()
Oct 16 05:50:38.931 TRACE: manager: POA Manager activated.
Oct 16 05:50:38.931 TRACE: manager: Manager::initLocalService()
Oct 16 05:50:38.931 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 05:50:38.931 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 05:50:38.931 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 05:50:38.931 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 05:50:38.931 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 05:50:38.931 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 05:50:38.931 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 05:50:38.931 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 05:50:38.932 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 05:50:38.932 TRACE: manager: RTC basic propfile vendor: 
Oct 16 05:50:38.932 TRACE: manager: RTC basic propfile category: 
Oct 16 05:50:38.932 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 05:50:38.932 TRACE: manager: RTC basic propfile version: 
Oct 16 05:50:38.932 TRACE: manager: Manager::getORB()
Oct 16 05:50:38.932 TRACE: manager: Manager::getPOA()
Oct 16 05:50:38.932 TRACE: manager: Manager::getORB()
Oct 16 05:50:38.932 TRACE: manager: Manager::getPOA()
Oct 16 05:50:38.932 TRACE: : getProperties()
Oct 16 05:50:38.932 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 05:50:38.932 TRACE: : getProperties()
Oct 16 05:50:38.932 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 05:50:38.932 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 05:50:38.932 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 05:50:38.932 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 05:50:38.932 DEBUG: CameraImage: Port name: CameraImage
Oct 16 05:50:38.932 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 05:50:38.932 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 05:50:38.932 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 05:50:38.932 TRACE: : setProperties()
Oct 16 05:50:38.932 TRACE: : getTypeName()
Oct 16 05:50:38.932 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 05:50:38.932 TRACE: manager: RTC created: WebCamera
Oct 16 05:50:38.932 TRACE: WebCamera0: getCategory()
Oct 16 05:50:38.932 TRACE: WebCamera0: getTypeName()
Oct 16 05:50:38.932 TRACE: WebCamera0: getInstanceName()
Oct 16 05:50:38.932 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 05:50:38.932 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 05:50:38.932 TRACE: WebCamera0: setProperties()
Oct 16 05:50:38.933 TRACE: WebCamera0: setProperties()
Oct 16 05:50:38.933 TRACE: WebCamera0: getProperties()
Oct 16 05:50:38.933 TRACE: WebCamera0: getProperties()
Oct 16 05:50:38.933 TRACE: WebCamera0: getProperties()
Oct 16 05:50:38.933 TRACE: WebCamera0: getProperties()
Oct 16 05:50:38.933 TRACE: WebCamera0: initialize()
Oct 16 05:50:38.933 DEBUG: WebCamera0: getContextOptions()
Oct 16 05:50:38.933 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 05:50:38.933 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 05:50:38.933 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 05:50:38.933 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 05:50:38.933 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 05:50:38.933 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 05:50:38.933 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 05:50:38.933 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 05:50:38.933 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 05:50:38.933 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 05:50:38.933 TRACE: periodic_ecprofile: setObjRef()
Oct 16 05:50:38.933 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 05:50:38.933 TRACE: ec_base: setRate(1000000.000000)
Oct 16 05:50:38.933 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 05:50:38.933 INFO: ec_base: setRate(1000000.000000) done
Oct 16 05:50:38.933 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 05:50:38.933 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 05:50:38.933 TRACE: ec_base: init()
Oct 16 05:50:38.933 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:50:38.933 TRACE: ec_base: setRate(30.000000)
Oct 16 05:50:38.933 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 05:50:38.933 INFO: ec_base: setRate(30.000000) done
Oct 16 05:50:38.933 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 05:50:38.933 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 05:50:38.933 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 05:50:38.933 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 05:50:38.933 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 05:50:38.933 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 05:50:38.933 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 05:50:38.933 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 05:50:38.933 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 05:50:38.933 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 05:50:38.933 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 05:50:38.933 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 05:50:38.933 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 05:50:38.933 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 05:50:38.933 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 05:50:38.933 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 05:50:38.933 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 05:50:38.933 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 05:50:38.933 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 05:50:38.933 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 05:50:38.933 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 05:50:38.933 TRACE: periodic_ecprofile: setProperties()
Oct 16 05:50:38.933 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:50:38.933 TRACE: ec_worker: bindComponent()
Oct 16 05:50:38.933 TRACE: WebCamera0: bindContext()
Oct 16 05:50:38.933 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 05:50:38.933 TRACE: WebCamera0: getObjRef()
Oct 16 05:50:38.933 TRACE: manager: Manager::getPOA()
Oct 16 05:50:38.933 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 05:50:38.933 INFO: WebCamera0: 1 execution context was created.
Oct 16 05:50:38.933 TRACE: WebCamera0: on_initialize()
Oct 16 05:50:38.933 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 05:50:38.933 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 05:50:38.933 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:50:38.933 TRACE: WebCamera0: getObjRef()
Oct 16 05:50:38.933 TRACE: WebCamera0: get_component_profile()
Oct 16 05:50:38.933 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 05:50:38.933 TRACE: CameraImage: getPortProfile()
Oct 16 05:50:38.933 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 05:50:38.933 TRACE: CameraImage: getPortRef()
Oct 16 05:50:38.933 TRACE: CameraImage: getProfile()
Oct 16 05:50:38.933 TRACE: CameraImage: init()
Oct 16 05:50:38.933 DEBUG: CameraImage: : 

Oct 16 05:50:38.933 DEBUG: CameraImage: : 

Oct 16 05:50:38.933 TRACE: CameraImage: initConsumers()
Oct 16 05:50:38.933 TRACE: CameraImage: initProviders()
Oct 16 05:50:38.933 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 05:50:38.933 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 05:50:38.933 TRACE: manager: Manager::getPOA()
Oct 16 05:50:38.933 TRACE: manager: Manager::getPOA()
Oct 16 05:50:38.933 TRACE: manager: Manager::getPOA()
Oct 16 05:50:38.933 TRACE: manager: Manager::getORB()
Oct 16 05:50:38.933 TRACE: manager: Manager::getPOA()
Oct 16 05:50:38.933 TRACE: manager: Manager::getPOA()
Oct 16 05:50:38.933 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 05:50:38.933 TRACE: CameraCaptureService: init()
Oct 16 05:50:38.933 DEBUG: CameraCaptureService: : 

Oct 16 05:50:38.933 DEBUG: CameraCaptureService: : 

Oct 16 05:50:38.933 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:50:38.933 TRACE: WebCamera0: getObjRef()
Oct 16 05:50:38.933 TRACE: WebCamera0: get_component_profile()
Oct 16 05:50:38.933 TRACE: CameraImage: get_port_profile()
Oct 16 05:50:38.933 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 05:50:38.933 TRACE: CameraCaptureService: getPortProfile()
Oct 16 05:50:38.933 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 05:50:38.934 TRACE: CameraImage: get_port_profile()
Oct 16 05:50:38.934 TRACE: CameraCaptureService: getPortRef()
Oct 16 05:50:38.934 TRACE: CameraCaptureService: getProfile()
Oct 16 05:50:38.934 TRACE: CameraImage: getProfile()
Oct 16 05:50:38.934 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 05:50:38.934 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 05:50:38.934 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 05:50:38.934 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 05:50:38.934 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 05:50:38.934 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 05:50:38.934 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 05:50:38.934 TRACE: WebCamera0: updateParameters(default)
Oct 16 05:50:38.934 TRACE: WebCamera0: getInstanceName()
Oct 16 05:50:38.934 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 05:50:38.934 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 05:50:38.934 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 05:50:38.934 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 05:50:38.934 DEBUG: WebCamera0: EC[0] starting.
Oct 16 05:50:38.934 TRACE: ec_base: start()
Oct 16 05:50:38.934 TRACE: ec_worker: start()
Oct 16 05:50:38.934 TRACE: WebCamera0: on_startup(0)
Oct 16 05:50:38.934 TRACE: WebCamera0: onStartup(0)
Oct 16 05:50:38.934 DEBUG: ec_worker: 1 components started.
Oct 16 05:50:38.934 TRACE: periodic_ec: open()
Oct 16 05:50:38.934 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 05:50:38.934 TRACE: WebCamera0: getInstanceName()
Oct 16 05:50:38.934 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 05:50:38.934 TRACE: WebCamera0: getInstanceName()
Oct 16 05:50:38.934 TRACE: periodic_ec: Oct 16 05:50:38.934 TRACE: WebCamera0: getNamingNames()svc()


Oct 16 05:50:38.934 TRACE: manager: Bind name: WebCamera0.rtc
Oct 16 05:50:38.934 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 05:50:38.934 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 05:50:38.934 TRACE: WebCamera0: getObjRef()
Oct 16 05:50:38.935 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 05:50:39.579 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 05:50:39.579 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 05:50:49.201 TRACE: NamingManager: NamingManager::update()
Oct 16 05:50:49.201 TRACE: NamingOnCorba: isAlive()
Oct 16 05:50:59.448 TRACE: NamingManager: NamingManager::update()
Oct 16 05:50:59.448 TRACE: NamingOnCorba: isAlive()
Oct 16 05:51:10.907 INFO: manager: 1.1.1
Oct 16 05:51:10.907 INFO: manager: Copyright (C) 2003-2012
Oct 16 05:51:10.907 INFO: manager:   Noriaki Ando
Oct 16 05:51:10.907 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 05:51:10.907 INFO: manager: Manager starting.
Oct 16 05:51:10.907 INFO: manager: Starting local logging.
Oct 16 05:51:10.907 TRACE: manager: Manager::initORB()
Oct 16 05:51:10.907 DEBUG: manager: corba.args: 
Oct 16 05:51:10.907 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 19344
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu.local
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 05:51:10.908 DEBUG: manager: corba.endpoint: 
Oct 16 05:51:10.908 DEBUG: manager: manager.is_master: NO
Oct 16 05:51:10.908 DEBUG: manager: corba.id: omniORB
Oct 16 05:51:10.908 TRACE: manager: Manager::initNaming()
Oct 16 05:51:10.908 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 05:51:10.908 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 05:51:10.908 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 05:51:10.908 TRACE: manager: Manager::getORB()
Oct 16 05:51:10.917 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 05:51:10.917 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 05:51:10.917 TRACE: manager: Manager::initFactories()
Oct 16 05:51:10.918 TRACE: manager: Manager::initExecContext()
Oct 16 05:51:10.918 TRACE: manager: Manager::initComposite()
Oct 16 05:51:10.918 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 05:51:10.918 TRACE: manager: Manager::initManagerServant()
Oct 16 05:51:10.918 TRACE: ManagerServant: This manager is slave.
Oct 16 05:51:10.918 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 05:51:10.918 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 05:51:10.918 TRACE: manager: Manager::getORB()
Oct 16 05:51:10.919 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 05:51:10.919 INFO: ManagerServant: Master manager not found
Oct 16 05:51:10.919 TRACE: manager: Manager::activateManager()
Oct 16 05:51:10.919 TRACE: manager: Manager::getPOAManager()
Oct 16 05:51:10.919 TRACE: manager: Manager::getPOAManager()
Oct 16 05:51:10.919 TRACE: manager: POA Manager activated.
Oct 16 05:51:10.919 TRACE: manager: Manager::initLocalService()
Oct 16 05:51:10.919 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 05:51:10.919 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 05:51:10.919 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 05:51:10.919 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 05:51:10.919 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 05:51:10.919 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 05:51:10.919 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 05:51:10.919 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 05:51:10.919 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 05:51:10.919 TRACE: manager: RTC basic propfile vendor: 
Oct 16 05:51:10.919 TRACE: manager: RTC basic propfile category: 
Oct 16 05:51:10.919 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 05:51:10.919 TRACE: manager: RTC basic propfile version: 
Oct 16 05:51:10.919 TRACE: manager: Manager::getORB()
Oct 16 05:51:10.919 TRACE: manager: Manager::getPOA()
Oct 16 05:51:10.919 TRACE: manager: Manager::getORB()
Oct 16 05:51:10.919 TRACE: manager: Manager::getPOA()
Oct 16 05:51:10.919 TRACE: : getProperties()
Oct 16 05:51:10.919 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 05:51:10.919 TRACE: : getProperties()
Oct 16 05:51:10.919 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 05:51:10.919 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 05:51:10.919 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 05:51:10.919 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 05:51:10.919 DEBUG: CameraImage: Port name: CameraImage
Oct 16 05:51:10.919 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 05:51:10.919 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 05:51:10.919 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 05:51:10.919 TRACE: : setProperties()
Oct 16 05:51:10.920 TRACE: : getTypeName()
Oct 16 05:51:10.920 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 05:51:10.920 TRACE: manager: RTC created: WebCamera
Oct 16 05:51:10.920 TRACE: WebCamera0: getCategory()
Oct 16 05:51:10.920 TRACE: WebCamera0: getTypeName()
Oct 16 05:51:10.920 TRACE: WebCamera0: getInstanceName()
Oct 16 05:51:10.920 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 05:51:10.920 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 05:51:10.920 TRACE: WebCamera0: setProperties()
Oct 16 05:51:10.920 TRACE: WebCamera0: setProperties()
Oct 16 05:51:10.920 TRACE: WebCamera0: getProperties()
Oct 16 05:51:10.920 TRACE: WebCamera0: getProperties()
Oct 16 05:51:10.920 TRACE: WebCamera0: getProperties()
Oct 16 05:51:10.920 TRACE: WebCamera0: getProperties()
Oct 16 05:51:10.920 TRACE: WebCamera0: initialize()
Oct 16 05:51:10.920 DEBUG: WebCamera0: getContextOptions()
Oct 16 05:51:10.920 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 05:51:10.920 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 05:51:10.920 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 05:51:10.920 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 05:51:10.920 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 05:51:10.920 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 05:51:10.920 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 05:51:10.920 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 05:51:10.920 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 05:51:10.920 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 05:51:10.920 TRACE: periodic_ecprofile: setObjRef()
Oct 16 05:51:10.920 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 05:51:10.920 TRACE: ec_base: setRate(1000000.000000)
Oct 16 05:51:10.920 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 05:51:10.920 INFO: ec_base: setRate(1000000.000000) done
Oct 16 05:51:10.920 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 05:51:10.920 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 05:51:10.920 TRACE: ec_base: init()
Oct 16 05:51:10.920 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:51:10.920 TRACE: ec_base: setRate(30.000000)
Oct 16 05:51:10.920 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 05:51:10.920 INFO: ec_base: setRate(30.000000) done
Oct 16 05:51:10.920 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 05:51:10.920 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 05:51:10.920 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 05:51:10.920 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 05:51:10.920 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 05:51:10.920 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 05:51:10.920 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 05:51:10.920 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 05:51:10.920 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 05:51:10.920 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 05:51:10.920 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 05:51:10.920 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 05:51:10.920 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 05:51:10.920 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 05:51:10.920 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 05:51:10.920 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 05:51:10.920 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 05:51:10.920 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 05:51:10.920 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 05:51:10.920 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 05:51:10.920 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 05:51:10.920 TRACE: periodic_ecprofile: setProperties()
Oct 16 05:51:10.920 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:51:10.920 TRACE: ec_worker: bindComponent()
Oct 16 05:51:10.920 TRACE: WebCamera0: bindContext()
Oct 16 05:51:10.920 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 05:51:10.920 TRACE: WebCamera0: getObjRef()
Oct 16 05:51:10.920 TRACE: manager: Manager::getPOA()
Oct 16 05:51:10.920 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 05:51:10.920 INFO: WebCamera0: 1 execution context was created.
Oct 16 05:51:10.920 TRACE: WebCamera0: on_initialize()
Oct 16 05:51:10.920 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 05:51:10.920 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 05:51:10.920 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:51:10.920 TRACE: WebCamera0: getObjRef()
Oct 16 05:51:10.921 TRACE: WebCamera0: get_component_profile()
Oct 16 05:51:10.921 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 05:51:10.921 TRACE: CameraImage: getPortProfile()
Oct 16 05:51:10.921 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 05:51:10.921 TRACE: CameraImage: getPortRef()
Oct 16 05:51:10.921 TRACE: CameraImage: getProfile()
Oct 16 05:51:10.921 TRACE: CameraImage: init()
Oct 16 05:51:10.921 DEBUG: CameraImage: : 

Oct 16 05:51:10.921 DEBUG: CameraImage: : 

Oct 16 05:51:10.921 TRACE: CameraImage: initConsumers()
Oct 16 05:51:10.921 TRACE: CameraImage: initProviders()
Oct 16 05:51:10.921 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 05:51:10.921 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 05:51:10.921 TRACE: manager: Manager::getPOA()
Oct 16 05:51:10.921 TRACE: manager: Manager::getPOA()
Oct 16 05:51:10.921 TRACE: manager: Manager::getPOA()
Oct 16 05:51:10.921 TRACE: manager: Manager::getORB()
Oct 16 05:51:10.921 TRACE: manager: Manager::getPOA()
Oct 16 05:51:10.921 TRACE: manager: Manager::getPOA()
Oct 16 05:51:10.921 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 05:51:10.921 TRACE: CameraCaptureService: init()
Oct 16 05:51:10.921 DEBUG: CameraCaptureService: : 

Oct 16 05:51:10.921 DEBUG: CameraCaptureService: : 

Oct 16 05:51:10.921 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:51:10.921 TRACE: WebCamera0: getObjRef()
Oct 16 05:51:10.921 TRACE: WebCamera0: get_component_profile()
Oct 16 05:51:10.921 TRACE: CameraImage: get_port_profile()
Oct 16 05:51:10.921 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 05:51:10.921 TRACE: CameraCaptureService: getPortProfile()
Oct 16 05:51:10.921 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 05:51:10.921 TRACE: CameraImage: get_port_profile()
Oct 16 05:51:10.921 TRACE: CameraCaptureService: getPortRef()
Oct 16 05:51:10.921 TRACE: CameraCaptureService: getProfile()
Oct 16 05:51:10.921 TRACE: CameraImage: getProfile()
Oct 16 05:51:10.921 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 05:51:10.921 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 05:51:10.921 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 05:51:10.921 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 05:51:10.921 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 05:51:10.921 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 05:51:10.921 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 05:51:10.921 TRACE: WebCamera0: updateParameters(default)
Oct 16 05:51:10.921 TRACE: WebCamera0: getInstanceName()
Oct 16 05:51:10.921 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 05:51:10.921 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 05:51:10.921 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 05:51:10.921 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 05:51:10.921 DEBUG: WebCamera0: EC[0] starting.
Oct 16 05:51:10.921 TRACE: ec_base: start()
Oct 16 05:51:10.921 TRACE: ec_worker: start()
Oct 16 05:51:10.921 TRACE: WebCamera0: on_startup(0)
Oct 16 05:51:10.921 TRACE: WebCamera0: onStartup(0)
Oct 16 05:51:10.921 DEBUG: ec_worker: 1 components started.
Oct 16 05:51:10.921 TRACE: periodic_ec: open()
Oct 16 05:51:10.921 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 05:51:10.921 TRACE: WebCamera0: getInstanceName()
Oct 16 05:51:10.921 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 05:51:10.921 TRACE: WebCamera0: getInstanceName()
Oct 16 05:51:10.921 TRACE: periodic_ec: svc()

Oct 16 05:51:10.921 TRACE: WebCamera0: getNamingNames()
Oct 16 05:51:10.921 TRACE: manager: Bind name: WebCamera0.rtc
Oct 16 05:51:10.921 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 05:51:10.921 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 05:51:10.921 TRACE: WebCamera0: getObjRef()
Oct 16 05:51:10.921 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 05:51:11.559 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 05:51:11.559 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 05:51:21.175 TRACE: NamingManager: NamingManager::update()
Oct 16 05:51:21.175 TRACE: NamingOnCorba: isAlive()
Oct 16 05:51:44.183 INFO: manager: 1.1.1
Oct 16 05:51:44.183 INFO: manager: Copyright (C) 2003-2012
Oct 16 05:51:44.183 INFO: manager:   Noriaki Ando
Oct 16 05:51:44.183 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 05:51:44.183 INFO: manager: Manager starting.
Oct 16 05:51:44.183 INFO: manager: Starting local logging.
Oct 16 05:51:44.183 TRACE: manager: Manager::initORB()
Oct 16 05:51:44.183 DEBUG: manager: corba.args: 
Oct 16 05:51:44.183 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 19362
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu.local
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 05:51:44.183 DEBUG: manager: corba.endpoint: 
Oct 16 05:51:44.183 DEBUG: manager: manager.is_master: NO
Oct 16 05:51:44.183 DEBUG: manager: corba.id: omniORB
Oct 16 05:51:44.184 TRACE: manager: Manager::initNaming()
Oct 16 05:51:44.184 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 05:51:44.184 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 05:51:44.184 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 05:51:44.184 TRACE: manager: Manager::getORB()
Oct 16 05:51:44.193 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 05:51:44.193 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 05:51:44.193 TRACE: manager: Manager::initFactories()
Oct 16 05:51:44.193 TRACE: manager: Manager::initExecContext()
Oct 16 05:51:44.193 TRACE: manager: Manager::initComposite()
Oct 16 05:51:44.193 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 05:51:44.193 TRACE: manager: Manager::initManagerServant()
Oct 16 05:51:44.193 TRACE: ManagerServant: This manager is slave.
Oct 16 05:51:44.193 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 05:51:44.194 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 05:51:44.194 TRACE: manager: Manager::getORB()
Oct 16 05:51:44.194 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 05:51:44.194 INFO: ManagerServant: Master manager not found
Oct 16 05:51:44.194 TRACE: manager: Manager::activateManager()
Oct 16 05:51:44.194 TRACE: manager: Manager::getPOAManager()
Oct 16 05:51:44.194 TRACE: manager: Manager::getPOAManager()
Oct 16 05:51:44.194 TRACE: manager: POA Manager activated.
Oct 16 05:51:44.194 TRACE: manager: Manager::initLocalService()
Oct 16 05:51:44.194 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 05:51:44.194 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 05:51:44.194 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 05:51:44.195 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 05:51:44.195 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 05:51:44.195 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 05:51:44.195 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 05:51:44.195 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 05:51:44.195 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 05:51:44.195 TRACE: manager: RTC basic propfile vendor: 
Oct 16 05:51:44.195 TRACE: manager: RTC basic propfile category: 
Oct 16 05:51:44.195 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 05:51:44.195 TRACE: manager: RTC basic propfile version: 
Oct 16 05:51:44.195 TRACE: manager: Manager::getORB()
Oct 16 05:51:44.195 TRACE: manager: Manager::getPOA()
Oct 16 05:51:44.195 TRACE: manager: Manager::getORB()
Oct 16 05:51:44.195 TRACE: manager: Manager::getPOA()
Oct 16 05:51:44.195 TRACE: : getProperties()
Oct 16 05:51:44.195 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 05:51:44.195 TRACE: : getProperties()
Oct 16 05:51:44.195 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 05:51:44.195 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 05:51:44.195 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 05:51:44.195 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 05:51:44.195 DEBUG: CameraImage: Port name: CameraImage
Oct 16 05:51:44.195 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 05:51:44.195 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 05:51:44.195 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 05:51:44.195 TRACE: : setProperties()
Oct 16 05:51:44.195 TRACE: : getTypeName()
Oct 16 05:51:44.195 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 05:51:44.195 TRACE: manager: RTC created: WebCamera
Oct 16 05:51:44.195 TRACE: WebCamera0: getCategory()
Oct 16 05:51:44.195 TRACE: WebCamera0: getTypeName()
Oct 16 05:51:44.195 TRACE: WebCamera0: getInstanceName()
Oct 16 05:51:44.195 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 05:51:44.195 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 05:51:44.195 TRACE: WebCamera0: setProperties()
Oct 16 05:51:44.196 TRACE: WebCamera0: setProperties()
Oct 16 05:51:44.196 TRACE: WebCamera0: getProperties()
Oct 16 05:51:44.196 TRACE: WebCamera0: getProperties()
Oct 16 05:51:44.196 TRACE: WebCamera0: getProperties()
Oct 16 05:51:44.196 TRACE: WebCamera0: getProperties()
Oct 16 05:51:44.196 TRACE: WebCamera0: initialize()
Oct 16 05:51:44.196 DEBUG: WebCamera0: getContextOptions()
Oct 16 05:51:44.196 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 05:51:44.196 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 05:51:44.196 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 05:51:44.196 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 05:51:44.196 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 05:51:44.196 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 05:51:44.196 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 05:51:44.196 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 05:51:44.196 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 05:51:44.196 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 05:51:44.196 TRACE: periodic_ecprofile: setObjRef()
Oct 16 05:51:44.196 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 05:51:44.196 TRACE: ec_base: setRate(1000000.000000)
Oct 16 05:51:44.196 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 05:51:44.196 INFO: ec_base: setRate(1000000.000000) done
Oct 16 05:51:44.196 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 05:51:44.196 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 05:51:44.196 TRACE: ec_base: init()
Oct 16 05:51:44.196 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:51:44.196 TRACE: ec_base: setRate(30.000000)
Oct 16 05:51:44.196 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 05:51:44.196 INFO: ec_base: setRate(30.000000) done
Oct 16 05:51:44.196 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 05:51:44.196 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 05:51:44.196 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 05:51:44.196 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 05:51:44.196 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 05:51:44.196 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 05:51:44.196 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 05:51:44.196 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 05:51:44.196 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 05:51:44.196 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 05:51:44.196 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 05:51:44.196 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 05:51:44.196 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 05:51:44.196 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 05:51:44.196 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 05:51:44.196 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 05:51:44.196 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 05:51:44.196 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 05:51:44.196 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 05:51:44.196 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 05:51:44.196 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 05:51:44.196 TRACE: periodic_ecprofile: setProperties()
Oct 16 05:51:44.196 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:51:44.196 TRACE: ec_worker: bindComponent()
Oct 16 05:51:44.196 TRACE: WebCamera0: bindContext()
Oct 16 05:51:44.196 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 05:51:44.196 TRACE: WebCamera0: getObjRef()
Oct 16 05:51:44.196 TRACE: manager: Manager::getPOA()
Oct 16 05:51:44.196 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 05:51:44.196 INFO: WebCamera0: 1 execution context was created.
Oct 16 05:51:44.196 TRACE: WebCamera0: on_initialize()
Oct 16 05:51:44.196 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 05:51:44.196 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 05:51:44.196 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:51:44.196 TRACE: WebCamera0: getObjRef()
Oct 16 05:51:44.196 TRACE: WebCamera0: get_component_profile()
Oct 16 05:51:44.196 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 05:51:44.196 TRACE: CameraImage: getPortProfile()
Oct 16 05:51:44.196 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 05:51:44.196 TRACE: CameraImage: getPortRef()
Oct 16 05:51:44.196 TRACE: CameraImage: getProfile()
Oct 16 05:51:44.196 TRACE: CameraImage: init()
Oct 16 05:51:44.196 DEBUG: CameraImage: : 

Oct 16 05:51:44.196 DEBUG: CameraImage: : 

Oct 16 05:51:44.196 TRACE: CameraImage: initConsumers()
Oct 16 05:51:44.196 TRACE: CameraImage: initProviders()
Oct 16 05:51:44.196 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 05:51:44.196 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 05:51:44.196 TRACE: manager: Manager::getPOA()
Oct 16 05:51:44.196 TRACE: manager: Manager::getPOA()
Oct 16 05:51:44.196 TRACE: manager: Manager::getPOA()
Oct 16 05:51:44.196 TRACE: manager: Manager::getORB()
Oct 16 05:51:44.196 TRACE: manager: Manager::getPOA()
Oct 16 05:51:44.196 TRACE: manager: Manager::getPOA()
Oct 16 05:51:44.196 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 05:51:44.196 TRACE: CameraCaptureService: init()
Oct 16 05:51:44.196 DEBUG: CameraCaptureService: : 

Oct 16 05:51:44.196 DEBUG: CameraCaptureService: : 

Oct 16 05:51:44.196 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:51:44.196 TRACE: WebCamera0: getObjRef()
Oct 16 05:51:44.196 TRACE: WebCamera0: get_component_profile()
Oct 16 05:51:44.196 TRACE: CameraImage: get_port_profile()
Oct 16 05:51:44.196 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 05:51:44.196 TRACE: CameraCaptureService: getPortProfile()
Oct 16 05:51:44.197 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 05:51:44.197 TRACE: CameraImage: get_port_profile()
Oct 16 05:51:44.197 TRACE: CameraCaptureService: getPortRef()
Oct 16 05:51:44.197 TRACE: CameraCaptureService: getProfile()
Oct 16 05:51:44.197 TRACE: CameraImage: getProfile()
Oct 16 05:51:44.197 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 05:51:44.197 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 05:51:44.197 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 05:51:44.197 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 05:51:44.197 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 05:51:44.197 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 05:51:44.197 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 05:51:44.197 TRACE: WebCamera0: updateParameters(default)
Oct 16 05:51:44.197 TRACE: WebCamera0: getInstanceName()
Oct 16 05:51:44.197 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 05:51:44.197 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 05:51:44.197 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 05:51:44.197 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 05:51:44.197 DEBUG: WebCamera0: EC[0] starting.
Oct 16 05:51:44.197 TRACE: ec_base: start()
Oct 16 05:51:44.197 TRACE: ec_worker: start()
Oct 16 05:51:44.197 TRACE: WebCamera0: on_startup(0)
Oct 16 05:51:44.197 TRACE: WebCamera0: onStartup(0)
Oct 16 05:51:44.197 DEBUG: ec_worker: 1 components started.
Oct 16 05:51:44.197 TRACE: periodic_ec: open()
Oct 16 05:51:44.197 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 05:51:44.197 TRACE: WebCamera0: getInstanceName()
Oct 16 05:51:44.197 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 05:51:44.197 TRACE: WebCamera0: getInstanceName()
Oct 16 05:51:44.197 TRACE: WebCamera0: getNamingNames()
Oct 16 05:51:44.197 TRACE: manager: Bind name: WebCamera0.rtc

Oct 16 05:51:44.197 TRACE: NamingManager: Oct 16 05:51:44.197 TRACE: periodic_ec: NamingManager::bindObject(WebCamera0.rtc)svc()

Oct 16 05:51:44.197 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 05:51:44.197 TRACE: WebCamera0: getObjRef()
Oct 16 05:51:44.197 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 05:51:44.835 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 05:51:44.835 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 05:51:54.443 TRACE: NamingManager: NamingManager::update()
Oct 16 05:51:54.443 TRACE: NamingOnCorba: isAlive()
Oct 16 05:52:04.748 TRACE: NamingManager: NamingManager::update()
Oct 16 05:52:04.748 TRACE: NamingOnCorba: isAlive()
Oct 16 05:52:16.666 INFO: manager: 1.1.1
Oct 16 05:52:16.666 INFO: manager: Copyright (C) 2003-2012
Oct 16 05:52:16.666 INFO: manager:   Noriaki Ando
Oct 16 05:52:16.666 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 05:52:16.666 INFO: manager: Manager starting.
Oct 16 05:52:16.666 INFO: manager: Starting local logging.
Oct 16 05:52:16.666 TRACE: manager: Manager::initORB()
Oct 16 05:52:16.666 DEBUG: manager: corba.args: 
Oct 16 05:52:16.666 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 19381
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu.local
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 05:52:16.667 DEBUG: manager: corba.endpoint: 
Oct 16 05:52:16.667 DEBUG: manager: manager.is_master: NO
Oct 16 05:52:16.667 DEBUG: manager: corba.id: omniORB
Oct 16 05:52:16.667 TRACE: manager: Manager::initNaming()
Oct 16 05:52:16.667 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 05:52:16.667 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 05:52:16.667 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 05:52:16.667 TRACE: manager: Manager::getORB()
Oct 16 05:52:16.676 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 05:52:16.676 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 05:52:16.676 TRACE: manager: Manager::initFactories()
Oct 16 05:52:16.676 TRACE: manager: Manager::initExecContext()
Oct 16 05:52:16.676 TRACE: manager: Manager::initComposite()
Oct 16 05:52:16.676 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 05:52:16.676 TRACE: manager: Manager::initManagerServant()
Oct 16 05:52:16.676 TRACE: ManagerServant: This manager is slave.
Oct 16 05:52:16.676 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 05:52:16.676 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 05:52:16.676 TRACE: manager: Manager::getORB()
Oct 16 05:52:16.677 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 05:52:16.677 INFO: ManagerServant: Master manager not found
Oct 16 05:52:16.677 TRACE: manager: Manager::activateManager()
Oct 16 05:52:16.677 TRACE: manager: Manager::getPOAManager()
Oct 16 05:52:16.677 TRACE: manager: Manager::getPOAManager()
Oct 16 05:52:16.677 TRACE: manager: POA Manager activated.
Oct 16 05:52:16.677 TRACE: manager: Manager::initLocalService()
Oct 16 05:52:16.677 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 05:52:16.677 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 05:52:16.677 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 05:52:16.677 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 05:52:16.677 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 05:52:16.677 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 05:52:16.677 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 05:52:16.677 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 05:52:16.677 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 05:52:16.678 TRACE: manager: RTC basic propfile vendor: 
Oct 16 05:52:16.678 TRACE: manager: RTC basic propfile category: 
Oct 16 05:52:16.678 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 05:52:16.678 TRACE: manager: RTC basic propfile version: 
Oct 16 05:52:16.678 TRACE: manager: Manager::getORB()
Oct 16 05:52:16.678 TRACE: manager: Manager::getPOA()
Oct 16 05:52:16.678 TRACE: manager: Manager::getORB()
Oct 16 05:52:16.678 TRACE: manager: Manager::getPOA()
Oct 16 05:52:16.678 TRACE: : getProperties()
Oct 16 05:52:16.678 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 05:52:16.678 TRACE: : getProperties()
Oct 16 05:52:16.678 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 05:52:16.678 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 05:52:16.678 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 05:52:16.678 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 05:52:16.678 DEBUG: CameraImage: Port name: CameraImage
Oct 16 05:52:16.678 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 05:52:16.678 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 05:52:16.678 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 05:52:16.678 TRACE: : setProperties()
Oct 16 05:52:16.678 TRACE: : getTypeName()
Oct 16 05:52:16.678 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 05:52:16.678 TRACE: manager: RTC created: WebCamera
Oct 16 05:52:16.678 TRACE: WebCamera0: getCategory()
Oct 16 05:52:16.678 TRACE: WebCamera0: getTypeName()
Oct 16 05:52:16.678 TRACE: WebCamera0: getInstanceName()
Oct 16 05:52:16.678 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 05:52:16.678 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 05:52:16.678 TRACE: WebCamera0: setProperties()
Oct 16 05:52:16.679 TRACE: WebCamera0: setProperties()
Oct 16 05:52:16.679 TRACE: WebCamera0: getProperties()
Oct 16 05:52:16.679 TRACE: WebCamera0: getProperties()
Oct 16 05:52:16.679 TRACE: WebCamera0: getProperties()
Oct 16 05:52:16.679 TRACE: WebCamera0: getProperties()
Oct 16 05:52:16.679 TRACE: WebCamera0: initialize()
Oct 16 05:52:16.679 DEBUG: WebCamera0: getContextOptions()
Oct 16 05:52:16.679 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 05:52:16.679 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 05:52:16.679 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 05:52:16.679 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 05:52:16.679 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 05:52:16.679 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 05:52:16.679 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 05:52:16.679 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 05:52:16.679 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 05:52:16.679 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 05:52:16.679 TRACE: periodic_ecprofile: setObjRef()
Oct 16 05:52:16.679 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 05:52:16.679 TRACE: ec_base: setRate(1000000.000000)
Oct 16 05:52:16.679 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 05:52:16.679 INFO: ec_base: setRate(1000000.000000) done
Oct 16 05:52:16.679 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 05:52:16.679 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 05:52:16.679 TRACE: ec_base: init()
Oct 16 05:52:16.679 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:52:16.679 TRACE: ec_base: setRate(30.000000)
Oct 16 05:52:16.679 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 05:52:16.679 INFO: ec_base: setRate(30.000000) done
Oct 16 05:52:16.679 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 05:52:16.679 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 05:52:16.679 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 05:52:16.679 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 05:52:16.679 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 05:52:16.679 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 05:52:16.679 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 05:52:16.679 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 05:52:16.679 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 05:52:16.679 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 05:52:16.679 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 05:52:16.679 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 05:52:16.679 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 05:52:16.679 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 05:52:16.679 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 05:52:16.679 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 05:52:16.679 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 05:52:16.679 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 05:52:16.679 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 05:52:16.679 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 05:52:16.679 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 05:52:16.679 TRACE: periodic_ecprofile: setProperties()
Oct 16 05:52:16.679 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:52:16.679 TRACE: ec_worker: bindComponent()
Oct 16 05:52:16.679 TRACE: WebCamera0: bindContext()
Oct 16 05:52:16.679 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 05:52:16.679 TRACE: WebCamera0: getObjRef()
Oct 16 05:52:16.679 TRACE: manager: Manager::getPOA()
Oct 16 05:52:16.679 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 05:52:16.679 INFO: WebCamera0: 1 execution context was created.
Oct 16 05:52:16.679 TRACE: WebCamera0: on_initialize()
Oct 16 05:52:16.679 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 05:52:16.679 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 05:52:16.679 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:52:16.679 TRACE: WebCamera0: getObjRef()
Oct 16 05:52:16.679 TRACE: WebCamera0: get_component_profile()
Oct 16 05:52:16.679 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 05:52:16.679 TRACE: CameraImage: getPortProfile()
Oct 16 05:52:16.679 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 05:52:16.679 TRACE: CameraImage: getPortRef()
Oct 16 05:52:16.679 TRACE: CameraImage: getProfile()
Oct 16 05:52:16.679 TRACE: CameraImage: init()
Oct 16 05:52:16.679 DEBUG: CameraImage: : 

Oct 16 05:52:16.679 DEBUG: CameraImage: : 

Oct 16 05:52:16.679 TRACE: CameraImage: initConsumers()
Oct 16 05:52:16.679 TRACE: CameraImage: initProviders()
Oct 16 05:52:16.679 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 05:52:16.679 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 05:52:16.679 TRACE: manager: Manager::getPOA()
Oct 16 05:52:16.679 TRACE: manager: Manager::getPOA()
Oct 16 05:52:16.679 TRACE: manager: Manager::getPOA()
Oct 16 05:52:16.679 TRACE: manager: Manager::getORB()
Oct 16 05:52:16.679 TRACE: manager: Manager::getPOA()
Oct 16 05:52:16.679 TRACE: manager: Manager::getPOA()
Oct 16 05:52:16.679 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 05:52:16.679 TRACE: CameraCaptureService: init()
Oct 16 05:52:16.679 DEBUG: CameraCaptureService: : 

Oct 16 05:52:16.679 DEBUG: CameraCaptureService: : 

Oct 16 05:52:16.679 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:52:16.679 TRACE: WebCamera0: getObjRef()
Oct 16 05:52:16.679 TRACE: WebCamera0: get_component_profile()
Oct 16 05:52:16.679 TRACE: CameraImage: get_port_profile()
Oct 16 05:52:16.680 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 05:52:16.680 TRACE: CameraCaptureService: getPortProfile()
Oct 16 05:52:16.680 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 05:52:16.680 TRACE: CameraImage: get_port_profile()
Oct 16 05:52:16.680 TRACE: CameraCaptureService: getPortRef()
Oct 16 05:52:16.680 TRACE: CameraCaptureService: getProfile()
Oct 16 05:52:16.680 TRACE: CameraImage: getProfile()
Oct 16 05:52:16.680 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 05:52:16.680 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 05:52:16.680 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 05:52:16.680 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 05:52:16.680 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 05:52:16.680 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 05:52:16.680 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 05:52:16.680 TRACE: WebCamera0: updateParameters(default)
Oct 16 05:52:16.680 TRACE: WebCamera0: getInstanceName()
Oct 16 05:52:16.680 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 05:52:16.680 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 05:52:16.680 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 05:52:16.680 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 05:52:16.680 DEBUG: WebCamera0: EC[0] starting.
Oct 16 05:52:16.680 TRACE: ec_base: start()
Oct 16 05:52:16.680 TRACE: ec_worker: start()
Oct 16 05:52:16.680 TRACE: WebCamera0: on_startup(0)
Oct 16 05:52:16.680 TRACE: WebCamera0: onStartup(0)
Oct 16 05:52:16.680 DEBUG: ec_worker: 1 components started.
Oct 16 05:52:16.680 TRACE: periodic_ec: open()
Oct 16 05:52:16.680 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 05:52:16.680 TRACE: WebCamera0: getInstanceName()
Oct 16 05:52:16.680 TRACE: manager: Manager::registerComponent(WebCamera0)Oct 16 05:52:16.680 TRACE: periodic_ec: 

svc()Oct 16 05:52:16.680 TRACE: WebCamera0: 

getInstanceName()
Oct 16 05:52:16.680 TRACE: WebCamera0: getNamingNames()
Oct 16 05:52:16.680 TRACE: manager: Bind name: WebCamera0.rtc
Oct 16 05:52:16.680 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 05:52:16.680 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 05:52:16.680 TRACE: WebCamera0: getObjRef()
Oct 16 05:52:16.680 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 05:52:17.317 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 05:52:17.317 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 05:52:26.956 TRACE: NamingManager: NamingManager::update()
Oct 16 05:52:26.956 TRACE: NamingOnCorba: isAlive()
Oct 16 05:54:36.625 INFO: manager: 1.1.1
Oct 16 05:54:36.626 INFO: manager: Copyright (C) 2003-2012
Oct 16 05:54:36.626 INFO: manager:   Noriaki Ando
Oct 16 05:54:36.626 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 05:54:36.626 INFO: manager: Manager starting.
Oct 16 05:54:36.626 INFO: manager: Starting local logging.
Oct 16 05:54:36.626 TRACE: manager: Manager::initORB()
Oct 16 05:54:36.626 DEBUG: manager: corba.args: 
Oct 16 05:54:36.626 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 19409
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu.local
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 05:54:36.626 DEBUG: manager: corba.endpoint: 
Oct 16 05:54:36.626 DEBUG: manager: manager.is_master: NO
Oct 16 05:54:36.626 DEBUG: manager: corba.id: omniORB
Oct 16 05:54:36.627 TRACE: manager: Manager::initNaming()
Oct 16 05:54:36.627 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 05:54:36.627 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 05:54:36.627 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 05:54:36.627 TRACE: manager: Manager::getORB()
Oct 16 05:54:36.636 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 05:54:36.636 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 05:54:36.636 TRACE: manager: Manager::initFactories()
Oct 16 05:54:36.636 TRACE: manager: Manager::initExecContext()
Oct 16 05:54:36.636 TRACE: manager: Manager::initComposite()
Oct 16 05:54:36.636 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 05:54:36.636 TRACE: manager: Manager::initManagerServant()
Oct 16 05:54:36.636 TRACE: ManagerServant: This manager is slave.
Oct 16 05:54:36.636 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 05:54:36.637 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 05:54:36.637 TRACE: manager: Manager::getORB()
Oct 16 05:54:36.637 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 05:54:36.637 INFO: ManagerServant: Master manager not found
Oct 16 05:54:36.637 TRACE: manager: Manager::activateManager()
Oct 16 05:54:36.637 TRACE: manager: Manager::getPOAManager()
Oct 16 05:54:36.637 TRACE: manager: Manager::getPOAManager()
Oct 16 05:54:36.637 TRACE: manager: POA Manager activated.
Oct 16 05:54:36.637 TRACE: manager: Manager::initLocalService()
Oct 16 05:54:36.637 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 05:54:36.637 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 05:54:36.637 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 05:54:36.637 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 05:54:36.637 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 05:54:36.637 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 05:54:36.637 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 05:54:36.637 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 05:54:36.638 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 05:54:36.638 TRACE: manager: RTC basic propfile vendor: 
Oct 16 05:54:36.638 TRACE: manager: RTC basic propfile category: 
Oct 16 05:54:36.638 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 05:54:36.638 TRACE: manager: RTC basic propfile version: 
Oct 16 05:54:36.638 TRACE: manager: Manager::getORB()
Oct 16 05:54:36.638 TRACE: manager: Manager::getPOA()
Oct 16 05:54:36.638 TRACE: manager: Manager::getORB()
Oct 16 05:54:36.638 TRACE: manager: Manager::getPOA()
Oct 16 05:54:36.638 TRACE: : getProperties()
Oct 16 05:54:36.638 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 05:54:36.638 TRACE: : getProperties()
Oct 16 05:54:36.638 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 05:54:36.638 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 05:54:36.638 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 05:54:36.638 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 05:54:36.638 DEBUG: CameraImage: Port name: CameraImage
Oct 16 05:54:36.638 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 05:54:36.638 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 05:54:36.638 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 05:54:36.638 TRACE: : setProperties()
Oct 16 05:54:36.638 TRACE: : getTypeName()
Oct 16 05:54:36.638 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 05:54:36.638 TRACE: manager: RTC created: WebCamera
Oct 16 05:54:36.638 TRACE: WebCamera0: getCategory()
Oct 16 05:54:36.638 TRACE: WebCamera0: getTypeName()
Oct 16 05:54:36.638 TRACE: WebCamera0: getInstanceName()
Oct 16 05:54:36.638 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 05:54:36.638 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 05:54:36.638 TRACE: WebCamera0: setProperties()
Oct 16 05:54:36.639 TRACE: WebCamera0: setProperties()
Oct 16 05:54:36.639 TRACE: WebCamera0: getProperties()
Oct 16 05:54:36.639 TRACE: WebCamera0: getProperties()
Oct 16 05:54:36.639 TRACE: WebCamera0: getProperties()
Oct 16 05:54:36.639 TRACE: WebCamera0: getProperties()
Oct 16 05:54:36.639 TRACE: WebCamera0: initialize()
Oct 16 05:54:36.639 DEBUG: WebCamera0: getContextOptions()
Oct 16 05:54:36.639 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 05:54:36.639 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 05:54:36.639 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 05:54:36.639 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 05:54:36.639 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 05:54:36.639 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 05:54:36.639 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 05:54:36.639 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 05:54:36.639 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 05:54:36.639 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 05:54:36.639 TRACE: periodic_ecprofile: setObjRef()
Oct 16 05:54:36.639 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 05:54:36.639 TRACE: ec_base: setRate(1000000.000000)
Oct 16 05:54:36.639 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 05:54:36.639 INFO: ec_base: setRate(1000000.000000) done
Oct 16 05:54:36.639 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 05:54:36.639 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 05:54:36.639 TRACE: ec_base: init()
Oct 16 05:54:36.639 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:54:36.639 TRACE: ec_base: setRate(30.000000)
Oct 16 05:54:36.639 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 05:54:36.639 INFO: ec_base: setRate(30.000000) done
Oct 16 05:54:36.639 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 05:54:36.639 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 05:54:36.639 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 05:54:36.639 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 05:54:36.639 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 05:54:36.639 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 05:54:36.639 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 05:54:36.639 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 05:54:36.639 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 05:54:36.639 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 05:54:36.639 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 05:54:36.639 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 05:54:36.639 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 05:54:36.639 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 05:54:36.639 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 05:54:36.639 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 05:54:36.639 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 05:54:36.639 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 05:54:36.639 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 05:54:36.639 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 05:54:36.639 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 05:54:36.639 TRACE: periodic_ecprofile: setProperties()
Oct 16 05:54:36.639 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:54:36.639 TRACE: ec_worker: bindComponent()
Oct 16 05:54:36.639 TRACE: WebCamera0: bindContext()
Oct 16 05:54:36.639 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 05:54:36.639 TRACE: WebCamera0: getObjRef()
Oct 16 05:54:36.639 TRACE: manager: Manager::getPOA()
Oct 16 05:54:36.639 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 05:54:36.639 INFO: WebCamera0: 1 execution context was created.
Oct 16 05:54:36.639 TRACE: WebCamera0: on_initialize()
Oct 16 05:54:36.639 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 05:54:36.639 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 05:54:36.639 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:54:36.639 TRACE: WebCamera0: getObjRef()
Oct 16 05:54:36.639 TRACE: WebCamera0: get_component_profile()
Oct 16 05:54:36.639 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 05:54:36.639 TRACE: CameraImage: getPortProfile()
Oct 16 05:54:36.639 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 05:54:36.639 TRACE: CameraImage: getPortRef()
Oct 16 05:54:36.639 TRACE: CameraImage: getProfile()
Oct 16 05:54:36.639 TRACE: CameraImage: init()
Oct 16 05:54:36.639 DEBUG: CameraImage: : 

Oct 16 05:54:36.639 DEBUG: CameraImage: : 

Oct 16 05:54:36.639 TRACE: CameraImage: initConsumers()
Oct 16 05:54:36.639 TRACE: CameraImage: initProviders()
Oct 16 05:54:36.639 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 05:54:36.639 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 05:54:36.639 TRACE: manager: Manager::getPOA()
Oct 16 05:54:36.639 TRACE: manager: Manager::getPOA()
Oct 16 05:54:36.639 TRACE: manager: Manager::getPOA()
Oct 16 05:54:36.639 TRACE: manager: Manager::getORB()
Oct 16 05:54:36.639 TRACE: manager: Manager::getPOA()
Oct 16 05:54:36.639 TRACE: manager: Manager::getPOA()
Oct 16 05:54:36.639 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 05:54:36.639 TRACE: CameraCaptureService: init()
Oct 16 05:54:36.639 DEBUG: CameraCaptureService: : 

Oct 16 05:54:36.639 DEBUG: CameraCaptureService: : 

Oct 16 05:54:36.639 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:54:36.639 TRACE: WebCamera0: getObjRef()
Oct 16 05:54:36.639 TRACE: WebCamera0: get_component_profile()
Oct 16 05:54:36.639 TRACE: CameraImage: get_port_profile()
Oct 16 05:54:36.639 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 05:54:36.639 TRACE: CameraCaptureService: getPortProfile()
Oct 16 05:54:36.639 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 05:54:36.639 TRACE: CameraImage: get_port_profile()
Oct 16 05:54:36.639 TRACE: CameraCaptureService: getPortRef()
Oct 16 05:54:36.640 TRACE: CameraCaptureService: getProfile()
Oct 16 05:54:36.640 TRACE: CameraImage: getProfile()
Oct 16 05:54:36.640 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 05:54:36.640 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 05:54:36.640 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 05:54:36.640 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 05:54:36.640 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 05:54:36.640 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 05:54:36.640 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 05:54:36.640 TRACE: WebCamera0: updateParameters(default)
Oct 16 05:54:36.640 TRACE: WebCamera0: getInstanceName()
Oct 16 05:54:36.640 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 05:54:36.640 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 05:54:36.640 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 05:54:36.640 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 05:54:36.640 DEBUG: WebCamera0: EC[0] starting.
Oct 16 05:54:36.640 TRACE: ec_base: start()
Oct 16 05:54:36.640 TRACE: ec_worker: start()
Oct 16 05:54:36.640 TRACE: WebCamera0: on_startup(0)
Oct 16 05:54:36.640 TRACE: WebCamera0: onStartup(0)
Oct 16 05:54:36.640 DEBUG: ec_worker: 1 components started.
Oct 16 05:54:36.640 TRACE: periodic_ec: open()
Oct 16 05:54:36.640 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 05:54:36.640 TRACE: WebCamera0: getInstanceName()

Oct 16 05:54:36.640 TRACE: periodic_ec: Oct 16 05:54:36.640 TRACE: manager: svc()Manager::registerComponent(WebCamera0)

Oct 16 05:54:36.640 TRACE: WebCamera0: getInstanceName()
Oct 16 05:54:36.640 TRACE: WebCamera0: getNamingNames()
Oct 16 05:54:36.640 TRACE: manager: Bind name: WebCamera0.rtc
Oct 16 05:54:36.640 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 05:54:36.640 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 05:54:36.640 TRACE: WebCamera0: getObjRef()
Oct 16 05:54:36.640 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 05:54:37.268 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 05:54:37.268 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 05:54:46.923 TRACE: NamingManager: NamingManager::update()
Oct 16 05:54:46.923 TRACE: NamingOnCorba: isAlive()
Oct 16 05:54:53.059 TRACE: manager: Manager::shutdown()
Oct 16 05:54:53.059 TRACE: manager: Manager::shutdownComponents()
Oct 16 05:54:53.059 TRACE: WebCamera0: exit()
Oct 16 05:54:53.059 TRACE: ec_base: deactivateComponent()
Oct 16 05:54:53.059 TRACE: ec_worker: deactivateComponent()
Oct 16 05:54:53.059 ERROR: ec_worker: State of the RTC is not ACTIVE_STATE.
Oct 16 05:54:53.059 TRACE: ec_base: stop()
Oct 16 05:54:53.059 TRACE: ec_worker: stop()
Oct 16 05:54:53.059 TRACE: WebCamera0: on_shutdown(0)
Oct 16 05:54:53.059 TRACE: WebCamera0: onShutdown(0)
Oct 16 05:54:53.059 TRACE: WebCamera0: finalize()
Oct 16 05:54:53.059 TRACE: WebCamera0: on_finalize()
Oct 16 05:54:53.059 TRACE: WebCamera0: shutdown()
Oct 16 05:54:53.059 TRACE: WebCamera0: finalizePorts()
Oct 16 05:54:53.059 TRACE: CameraImage: deactivateInterfaces()
Oct 16 05:54:53.059 TRACE: manager: Manager::getPOA()
Oct 16 05:54:53.059 TRACE: CameraImage: disconnect_all()
Oct 16 05:54:53.059 DEBUG: CameraImage: disconnecting 0 connections.
Oct 16 05:54:53.059 TRACE: CameraImage: getProfile()
Oct 16 05:54:53.059 TRACE: CameraImage: get_port_profile()
Oct 16 05:54:53.059 TRACE: CameraImage: setPortRef()
Oct 16 05:54:53.059 TRACE: CameraImage: getProfile()
Oct 16 05:54:53.059 TRACE: CameraCaptureService: disconnect_all()
Oct 16 05:54:53.059 DEBUG: CameraCaptureService: disconnecting 0 connections.
Oct 16 05:54:53.059 TRACE: CameraCaptureService: getProfile()
Oct 16 05:54:53.059 TRACE: CameraCaptureService: get_port_profile()
Oct 16 05:54:53.059 TRACE: CameraCaptureService: setPortRef()
Oct 16 05:54:53.059 TRACE: CameraCaptureService: getProfile()
Oct 16 05:54:53.059 TRACE: WebCamera0: finalizeContexts()
Oct 16 05:54:53.059 TRACE: periodic_ecprofile: getObjRef()
Oct 16 05:54:53.059 TRACE: ec_base: stop()
Oct 16 05:54:53.059 TRACE: ec_worker: stop()
Oct 16 05:54:53.059 WARNING: ec_worker: ExecutionContext is already stopped.
Oct 16 05:54:53.059 ERROR: ec_base: Invoking on_shutdown() for each RTC failed.
Oct 16 05:54:53.059 DEBUG: WebCamera0: Deactivating Execution Context.
Oct 16 05:54:53.059 DEBUG: WebCamera0: Deactivating EC done.
Oct 16 05:54:53.059 TRACE: periodic_ec: ~PeriodicExecutionContext()
Oct 16 05:56:18.233 INFO: manager: 1.1.1
Oct 16 05:56:18.234 INFO: manager: Copyright (C) 2003-2012
Oct 16 05:56:18.234 INFO: manager:   Noriaki Ando
Oct 16 05:56:18.234 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 05:56:18.234 INFO: manager: Manager starting.
Oct 16 05:56:18.234 INFO: manager: Starting local logging.
Oct 16 05:56:18.234 TRACE: manager: Manager::initORB()
Oct 16 05:56:18.234 DEBUG: manager: corba.args: 
Oct 16 05:56:18.234 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 19433
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu.local
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 05:56:18.234 DEBUG: manager: corba.endpoint: 
Oct 16 05:56:18.234 DEBUG: manager: manager.is_master: NO
Oct 16 05:56:18.234 DEBUG: manager: corba.id: omniORB
Oct 16 05:56:18.235 TRACE: manager: Manager::initNaming()
Oct 16 05:56:18.235 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 05:56:18.235 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 05:56:18.235 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 05:56:18.235 TRACE: manager: Manager::getORB()
Oct 16 05:56:18.244 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 05:56:18.244 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 05:56:18.244 TRACE: manager: Manager::initFactories()
Oct 16 05:56:18.244 TRACE: manager: Manager::initExecContext()
Oct 16 05:56:18.244 TRACE: manager: Manager::initComposite()
Oct 16 05:56:18.244 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 05:56:18.244 TRACE: manager: Manager::initManagerServant()
Oct 16 05:56:18.244 TRACE: ManagerServant: This manager is slave.
Oct 16 05:56:18.244 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 05:56:18.245 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 05:56:18.245 TRACE: manager: Manager::getORB()
Oct 16 05:56:18.245 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 05:56:18.245 INFO: ManagerServant: Master manager not found
Oct 16 05:56:18.245 TRACE: manager: Manager::activateManager()
Oct 16 05:56:18.245 TRACE: manager: Manager::getPOAManager()
Oct 16 05:56:18.245 TRACE: manager: Manager::getPOAManager()
Oct 16 05:56:18.245 TRACE: manager: POA Manager activated.
Oct 16 05:56:18.245 TRACE: manager: Manager::initLocalService()
Oct 16 05:56:18.245 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 05:56:18.245 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 05:56:18.245 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 05:56:18.245 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 05:56:18.245 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 05:56:18.245 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 05:56:18.245 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 05:56:18.245 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 05:56:18.245 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 05:56:18.245 TRACE: manager: RTC basic propfile vendor: 
Oct 16 05:56:18.245 TRACE: manager: RTC basic propfile category: 
Oct 16 05:56:18.245 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 05:56:18.245 TRACE: manager: RTC basic propfile version: 
Oct 16 05:56:18.246 TRACE: manager: Manager::getORB()
Oct 16 05:56:18.246 TRACE: manager: Manager::getPOA()
Oct 16 05:56:18.246 TRACE: manager: Manager::getORB()
Oct 16 05:56:18.246 TRACE: manager: Manager::getPOA()
Oct 16 05:56:18.246 TRACE: : getProperties()
Oct 16 05:56:18.246 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 05:56:18.246 TRACE: : getProperties()
Oct 16 05:56:18.246 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 05:56:18.246 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 05:56:18.246 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 05:56:18.246 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 05:56:18.246 DEBUG: CameraImage: Port name: CameraImage
Oct 16 05:56:18.246 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 05:56:18.246 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 05:56:18.246 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 05:56:18.246 TRACE: : setProperties()
Oct 16 05:56:18.246 TRACE: : getTypeName()
Oct 16 05:56:18.246 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 05:56:18.246 TRACE: manager: RTC created: WebCamera
Oct 16 05:56:18.246 TRACE: WebCamera0: getCategory()
Oct 16 05:56:18.246 TRACE: WebCamera0: getTypeName()
Oct 16 05:56:18.246 TRACE: WebCamera0: getInstanceName()
Oct 16 05:56:18.246 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 05:56:18.246 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 05:56:18.246 TRACE: WebCamera0: setProperties()
Oct 16 05:56:18.246 TRACE: WebCamera0: setProperties()
Oct 16 05:56:18.246 TRACE: WebCamera0: getProperties()
Oct 16 05:56:18.246 TRACE: WebCamera0: getProperties()
Oct 16 05:56:18.246 TRACE: WebCamera0: getProperties()
Oct 16 05:56:18.246 TRACE: WebCamera0: getProperties()
Oct 16 05:56:18.246 TRACE: WebCamera0: initialize()
Oct 16 05:56:18.246 DEBUG: WebCamera0: getContextOptions()
Oct 16 05:56:18.246 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 05:56:18.246 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 05:56:18.246 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 05:56:18.246 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 05:56:18.246 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 05:56:18.246 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 05:56:18.247 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 05:56:18.247 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 05:56:18.247 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 05:56:18.247 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 05:56:18.247 TRACE: periodic_ecprofile: setObjRef()
Oct 16 05:56:18.247 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 05:56:18.247 TRACE: ec_base: setRate(1000000.000000)
Oct 16 05:56:18.247 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 05:56:18.247 INFO: ec_base: setRate(1000000.000000) done
Oct 16 05:56:18.247 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 05:56:18.247 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 05:56:18.247 TRACE: ec_base: init()
Oct 16 05:56:18.247 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:56:18.247 TRACE: ec_base: setRate(30.000000)
Oct 16 05:56:18.247 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 05:56:18.247 INFO: ec_base: setRate(30.000000) done
Oct 16 05:56:18.247 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 05:56:18.247 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 05:56:18.247 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 05:56:18.247 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 05:56:18.247 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 05:56:18.247 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 05:56:18.247 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 05:56:18.247 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 05:56:18.247 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 05:56:18.247 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 05:56:18.247 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 05:56:18.247 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 05:56:18.247 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 05:56:18.247 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 05:56:18.247 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 05:56:18.247 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 05:56:18.247 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 05:56:18.247 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 05:56:18.247 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 05:56:18.247 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 05:56:18.247 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 05:56:18.247 TRACE: periodic_ecprofile: setProperties()
Oct 16 05:56:18.247 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 05:56:18.247 TRACE: ec_worker: bindComponent()
Oct 16 05:56:18.247 TRACE: WebCamera0: bindContext()
Oct 16 05:56:18.247 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 05:56:18.247 TRACE: WebCamera0: getObjRef()
Oct 16 05:56:18.247 TRACE: manager: Manager::getPOA()
Oct 16 05:56:18.247 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 05:56:18.247 INFO: WebCamera0: 1 execution context was created.
Oct 16 05:56:18.247 TRACE: WebCamera0: on_initialize()
Oct 16 05:56:18.247 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 05:56:18.247 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 05:56:18.247 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:56:18.247 TRACE: WebCamera0: getObjRef()
Oct 16 05:56:18.247 TRACE: WebCamera0: get_component_profile()
Oct 16 05:56:18.247 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 05:56:18.247 TRACE: CameraImage: getPortProfile()
Oct 16 05:56:18.247 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 05:56:18.247 TRACE: CameraImage: getPortRef()
Oct 16 05:56:18.247 TRACE: CameraImage: getProfile()
Oct 16 05:56:18.247 TRACE: CameraImage: init()
Oct 16 05:56:18.247 DEBUG: CameraImage: : 

Oct 16 05:56:18.247 DEBUG: CameraImage: : 

Oct 16 05:56:18.247 TRACE: CameraImage: initConsumers()
Oct 16 05:56:18.247 TRACE: CameraImage: initProviders()
Oct 16 05:56:18.247 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 05:56:18.247 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 05:56:18.247 TRACE: manager: Manager::getPOA()
Oct 16 05:56:18.247 TRACE: manager: Manager::getPOA()
Oct 16 05:56:18.247 TRACE: manager: Manager::getPOA()
Oct 16 05:56:18.247 TRACE: manager: Manager::getORB()
Oct 16 05:56:18.247 TRACE: manager: Manager::getPOA()
Oct 16 05:56:18.247 TRACE: manager: Manager::getPOA()
Oct 16 05:56:18.247 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 05:56:18.247 TRACE: CameraCaptureService: init()
Oct 16 05:56:18.247 DEBUG: CameraCaptureService: : 

Oct 16 05:56:18.247 DEBUG: CameraCaptureService: : 

Oct 16 05:56:18.247 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 05:56:18.247 TRACE: WebCamera0: getObjRef()
Oct 16 05:56:18.247 TRACE: WebCamera0: get_component_profile()
Oct 16 05:56:18.247 TRACE: CameraImage: get_port_profile()
Oct 16 05:56:18.247 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 05:56:18.247 TRACE: CameraCaptureService: getPortProfile()
Oct 16 05:56:18.247 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 05:56:18.247 TRACE: CameraImage: get_port_profile()
Oct 16 05:56:18.247 TRACE: CameraCaptureService: getPortRef()
Oct 16 05:56:18.247 TRACE: CameraCaptureService: getProfile()
Oct 16 05:56:18.247 TRACE: CameraImage: getProfile()
Oct 16 05:56:18.247 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 05:56:18.247 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 05:56:18.247 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 05:56:18.247 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 05:56:18.247 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 05:56:18.247 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 05:56:18.247 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 05:56:18.247 TRACE: WebCamera0: updateParameters(default)
Oct 16 05:56:18.247 TRACE: WebCamera0: getInstanceName()
Oct 16 05:56:18.247 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 05:56:18.247 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 05:56:18.247 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 05:56:18.247 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 05:56:18.247 DEBUG: WebCamera0: EC[0] starting.
Oct 16 05:56:18.247 TRACE: ec_base: start()
Oct 16 05:56:18.247 TRACE: ec_worker: start()
Oct 16 05:56:18.247 TRACE: WebCamera0: on_startup(0)
Oct 16 05:56:18.247 TRACE: WebCamera0: onStartup(0)
Oct 16 05:56:18.247 DEBUG: ec_worker: 1 components started.
Oct 16 05:56:18.247 TRACE: periodic_ec: open()
Oct 16 05:56:18.247 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 05:56:18.247 TRACE: WebCamera0: getInstanceName()
Oct 16 05:56:18.247 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 05:56:18.247 TRACE: WebCamera0: getInstanceName()
Oct 16 05:56:18.247 TRACE: WebCamera0: getNamingNames()
Oct 16 05:56:18.247 TRACE: periodic_ec: svc()

Oct 16 05:56:18.247 TRACE: manager: Bind name: WebCamera0.rtc
Oct 16 05:56:18.247 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 05:56:18.247 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 05:56:18.247 TRACE: WebCamera0: getObjRef()
Oct 16 05:56:18.248 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 05:56:18.888 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 05:56:18.888 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 05:56:28.536 TRACE: NamingManager: NamingManager::update()
Oct 16 05:56:28.536 TRACE: NamingOnCorba: isAlive()
Oct 16 07:08:44.655 INFO: manager: 1.1.1
Oct 16 07:08:44.657 INFO: manager: Copyright (C) 2003-2012
Oct 16 07:08:44.657 INFO: manager:   Noriaki Ando
Oct 16 07:08:44.657 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 07:08:44.657 INFO: manager: Manager starting.
Oct 16 07:08:44.657 INFO: manager: Starting local logging.
Oct 16 07:08:44.657 TRACE: manager: Manager::initORB()
Oct 16 07:08:44.657 DEBUG: manager: corba.args: 
Oct 16 07:08:44.657 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 23126
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 07:08:44.657 DEBUG: manager: corba.endpoint: 
Oct 16 07:08:44.657 DEBUG: manager: manager.is_master: NO
Oct 16 07:08:44.657 DEBUG: manager: corba.id: omniORB
Oct 16 07:08:44.658 TRACE: manager: Manager::initNaming()
Oct 16 07:08:44.658 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 07:08:44.658 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 07:08:44.658 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 07:08:44.658 TRACE: manager: Manager::getORB()
Oct 16 07:08:44.668 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 07:08:44.668 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 07:08:44.668 TRACE: manager: Manager::initFactories()
Oct 16 07:08:44.668 TRACE: manager: Manager::initExecContext()
Oct 16 07:08:44.668 TRACE: manager: Manager::initComposite()
Oct 16 07:08:44.668 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 07:08:44.668 TRACE: manager: Manager::initManagerServant()
Oct 16 07:08:44.668 TRACE: ManagerServant: This manager is slave.
Oct 16 07:08:44.668 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 07:08:44.668 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 07:08:44.668 TRACE: manager: Manager::getORB()
Oct 16 07:08:44.669 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 07:08:44.669 INFO: ManagerServant: Master manager not found
Oct 16 07:08:44.669 TRACE: manager: Manager::activateManager()
Oct 16 07:08:44.669 TRACE: manager: Manager::getPOAManager()
Oct 16 07:08:44.669 TRACE: manager: Manager::getPOAManager()
Oct 16 07:08:44.669 TRACE: manager: POA Manager activated.
Oct 16 07:08:44.669 TRACE: manager: Manager::initLocalService()
Oct 16 07:08:44.669 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 07:08:44.669 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 07:08:44.669 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 07:08:44.669 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 07:08:44.669 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 07:08:44.669 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 07:08:44.669 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 07:08:44.669 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 07:08:44.669 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 07:08:44.669 TRACE: manager: RTC basic propfile vendor: 
Oct 16 07:08:44.669 TRACE: manager: RTC basic propfile category: 
Oct 16 07:08:44.669 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 07:08:44.669 TRACE: manager: RTC basic propfile version: 
Oct 16 07:08:44.669 TRACE: manager: Manager::getORB()
Oct 16 07:08:44.669 TRACE: manager: Manager::getPOA()
Oct 16 07:08:44.669 TRACE: manager: Manager::getORB()
Oct 16 07:08:44.669 TRACE: manager: Manager::getPOA()
Oct 16 07:08:44.670 TRACE: : getProperties()
Oct 16 07:08:44.670 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 07:08:44.670 TRACE: : getProperties()
Oct 16 07:08:44.670 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 07:08:44.670 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 07:08:44.670 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 07:08:44.670 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 07:08:44.670 DEBUG: CameraImage: Port name: CameraImage
Oct 16 07:08:44.670 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 07:08:44.670 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 07:08:44.670 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 07:08:44.670 TRACE: : setProperties()
Oct 16 07:08:44.670 TRACE: : getTypeName()
Oct 16 07:08:44.670 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 07:08:44.670 TRACE: manager: RTC created: WebCamera
Oct 16 07:08:44.670 TRACE: WebCamera0: getCategory()
Oct 16 07:08:44.670 TRACE: WebCamera0: getTypeName()
Oct 16 07:08:44.670 TRACE: WebCamera0: getInstanceName()
Oct 16 07:08:44.670 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 07:08:44.670 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 07:08:44.670 TRACE: WebCamera0: setProperties()
Oct 16 07:08:44.670 TRACE: WebCamera0: setProperties()
Oct 16 07:08:44.670 TRACE: WebCamera0: getProperties()
Oct 16 07:08:44.670 TRACE: WebCamera0: getProperties()
Oct 16 07:08:44.670 TRACE: WebCamera0: getProperties()
Oct 16 07:08:44.670 TRACE: WebCamera0: getProperties()
Oct 16 07:08:44.670 TRACE: WebCamera0: initialize()
Oct 16 07:08:44.670 DEBUG: WebCamera0: getContextOptions()
Oct 16 07:08:44.670 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 07:08:44.670 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 07:08:44.670 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 07:08:44.670 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 07:08:44.670 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 07:08:44.670 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 07:08:44.670 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 07:08:44.670 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 07:08:44.670 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 07:08:44.670 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 07:08:44.670 TRACE: periodic_ecprofile: setObjRef()
Oct 16 07:08:44.670 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 07:08:44.670 TRACE: ec_base: setRate(1000000.000000)
Oct 16 07:08:44.670 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 07:08:44.670 INFO: ec_base: setRate(1000000.000000) done
Oct 16 07:08:44.670 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 07:08:44.670 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 07:08:44.670 TRACE: ec_base: init()
Oct 16 07:08:44.670 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:08:44.670 TRACE: ec_base: setRate(30.000000)
Oct 16 07:08:44.670 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 07:08:44.670 INFO: ec_base: setRate(30.000000) done
Oct 16 07:08:44.670 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 07:08:44.670 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 07:08:44.670 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 07:08:44.670 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 07:08:44.670 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 07:08:44.671 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 07:08:44.671 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 07:08:44.671 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 07:08:44.671 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 07:08:44.671 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 07:08:44.671 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 07:08:44.671 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 07:08:44.671 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 07:08:44.671 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 07:08:44.671 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 07:08:44.671 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 07:08:44.671 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 07:08:44.671 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 07:08:44.671 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 07:08:44.671 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 07:08:44.671 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 07:08:44.671 TRACE: periodic_ecprofile: setProperties()
Oct 16 07:08:44.671 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:08:44.671 TRACE: ec_worker: bindComponent()
Oct 16 07:08:44.671 TRACE: WebCamera0: bindContext()
Oct 16 07:08:44.671 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 07:08:44.671 TRACE: WebCamera0: getObjRef()
Oct 16 07:08:44.671 TRACE: manager: Manager::getPOA()
Oct 16 07:08:44.671 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 07:08:44.671 INFO: WebCamera0: 1 execution context was created.
Oct 16 07:08:44.671 TRACE: WebCamera0: on_initialize()
Oct 16 07:08:44.671 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 07:08:44.671 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 07:08:44.671 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 07:08:44.671 TRACE: WebCamera0: getObjRef()
Oct 16 07:08:44.671 TRACE: WebCamera0: get_component_profile()
Oct 16 07:08:44.671 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 07:08:44.671 TRACE: CameraImage: getPortProfile()
Oct 16 07:08:44.671 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 07:08:44.671 TRACE: CameraImage: getPortRef()
Oct 16 07:08:44.671 TRACE: CameraImage: getProfile()
Oct 16 07:08:44.671 TRACE: CameraImage: init()
Oct 16 07:08:44.671 DEBUG: CameraImage: : 

Oct 16 07:08:44.671 DEBUG: CameraImage: : 

Oct 16 07:08:44.671 TRACE: CameraImage: initConsumers()
Oct 16 07:08:44.671 TRACE: CameraImage: initProviders()
Oct 16 07:08:44.671 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 07:08:44.671 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 07:08:44.671 TRACE: manager: Manager::getPOA()
Oct 16 07:08:44.671 TRACE: manager: Manager::getPOA()
Oct 16 07:08:44.671 TRACE: manager: Manager::getPOA()
Oct 16 07:08:44.671 TRACE: manager: Manager::getORB()
Oct 16 07:08:44.671 TRACE: manager: Manager::getPOA()
Oct 16 07:08:44.671 TRACE: manager: Manager::getPOA()
Oct 16 07:08:44.671 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 07:08:44.671 TRACE: CameraCaptureService: init()
Oct 16 07:08:44.671 DEBUG: CameraCaptureService: : 

Oct 16 07:08:44.671 DEBUG: CameraCaptureService: : 

Oct 16 07:08:44.671 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 07:08:44.671 TRACE: WebCamera0: getObjRef()
Oct 16 07:08:44.671 TRACE: WebCamera0: get_component_profile()
Oct 16 07:08:44.671 TRACE: CameraImage: get_port_profile()
Oct 16 07:08:44.671 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 07:08:44.671 TRACE: CameraCaptureService: getPortProfile()
Oct 16 07:08:44.671 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 07:08:44.671 TRACE: CameraImage: get_port_profile()
Oct 16 07:08:44.671 TRACE: CameraCaptureService: getPortRef()
Oct 16 07:08:44.671 TRACE: CameraCaptureService: getProfile()
Oct 16 07:08:44.671 TRACE: CameraImage: getProfile()
Oct 16 07:08:44.671 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 07:08:44.671 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 07:08:44.671 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 07:08:44.671 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 07:08:44.671 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 07:08:44.671 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 07:08:44.671 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 07:08:44.671 TRACE: WebCamera0: updateParameters(default)
Oct 16 07:08:44.671 TRACE: WebCamera0: getInstanceName()
Oct 16 07:08:44.671 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 07:08:44.671 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 07:08:44.671 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 07:08:44.671 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 07:08:44.671 DEBUG: WebCamera0: EC[0] starting.
Oct 16 07:08:44.671 TRACE: ec_base: start()
Oct 16 07:08:44.671 TRACE: ec_worker: start()
Oct 16 07:08:44.671 TRACE: WebCamera0: on_startup(0)
Oct 16 07:08:44.671 TRACE: WebCamera0: onStartup(0)
Oct 16 07:08:44.671 DEBUG: ec_worker: 1 components started.
Oct 16 07:08:44.671 TRACE: periodic_ec: open()
Oct 16 07:08:44.671 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 07:08:44.671 TRACE: WebCamera0: getInstanceName()
Oct 16 07:08:44.671 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 07:08:44.671 TRACE: WebCamera0: getInstanceName()
Oct 16 07:08:44.671 TRACE: WebCamera0: getNamingNames()
Oct 16 07:08:44.671 TRACE: manager: Bind name: WebCamera0.rtc
Oct 16 07:08:44.671 TRACE: NamingManager: Oct 16 07:08:44.671 TRACE: periodic_ec: NamingManager::bindObject(WebCamera0.rtc)svc()

Oct 16 07:08:44.671 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 07:08:44.671 TRACE: WebCamera0: getObjRef()
Oct 16 07:08:44.672 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 07:08:51.338 TRACE: WebCamera0: get_component_profile()
Oct 16 07:08:51.338 TRACE: CameraImage: get_port_profile()
Oct 16 07:08:51.338 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:08:54.024 TRACE: manager: Manager::shutdown()
Oct 16 07:08:54.024 TRACE: manager: Manager::shutdownComponents()
Oct 16 07:08:54.024 TRACE: WebCamera0: exit()
Oct 16 07:08:54.024 TRACE: ec_base: deactivateComponent()
Oct 16 07:08:54.024 TRACE: ec_worker: deactivateComponent()
Oct 16 07:08:54.024 ERROR: ec_worker: State of the RTC is not ACTIVE_STATE.
Oct 16 07:08:54.024 TRACE: ec_base: stop()
Oct 16 07:08:54.024 TRACE: ec_worker: stop()
Oct 16 07:08:54.024 TRACE: WebCamera0: on_shutdown(0)
Oct 16 07:08:54.024 TRACE: WebCamera0: onShutdown(0)
Oct 16 07:08:54.024 TRACE: WebCamera0: finalize()
Oct 16 07:08:54.024 TRACE: WebCamera0: on_finalize()
Oct 16 07:08:54.024 TRACE: WebCamera0: shutdown()
Oct 16 07:08:54.024 TRACE: WebCamera0: finalizePorts()
Oct 16 07:08:54.024 TRACE: CameraImage: deactivateInterfaces()
Oct 16 07:08:54.024 TRACE: manager: Manager::getPOA()
Oct 16 07:08:54.024 TRACE: CameraImage: disconnect_all()
Oct 16 07:08:54.024 DEBUG: CameraImage: disconnecting 0 connections.
Oct 16 07:08:54.024 TRACE: CameraImage: getProfile()
Oct 16 07:08:54.024 TRACE: CameraImage: get_port_profile()
Oct 16 07:08:54.024 TRACE: CameraImage: setPortRef()
Oct 16 07:08:54.024 TRACE: CameraImage: getProfile()
Oct 16 07:08:54.024 TRACE: CameraCaptureService: disconnect_all()
Oct 16 07:08:54.024 DEBUG: CameraCaptureService: disconnecting 0 connections.
Oct 16 07:08:54.024 TRACE: CameraCaptureService: getProfile()
Oct 16 07:08:54.024 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:08:54.024 TRACE: CameraCaptureService: setPortRef()
Oct 16 07:08:54.024 TRACE: CameraCaptureService: getProfile()
Oct 16 07:08:54.024 TRACE: WebCamera0: finalizeContexts()
Oct 16 07:08:54.024 TRACE: periodic_ecprofile: getObjRef()
Oct 16 07:08:54.024 TRACE: ec_base: stop()
Oct 16 07:08:54.024 TRACE: ec_worker: stop()
Oct 16 07:08:54.024 WARNING: ec_worker: ExecutionContext is already stopped.
Oct 16 07:08:54.024 ERROR: ec_base: Invoking on_shutdown() for each RTC failed.
Oct 16 07:08:54.024 DEBUG: WebCamera0: Deactivating Execution Context.
Oct 16 07:08:54.024 DEBUG: WebCamera0: Deactivating EC done.
Oct 16 07:08:54.024 TRACE: periodic_ec: ~PeriodicExecutionContext()
Oct 16 07:09:43.523 INFO: manager: 1.1.1
Oct 16 07:09:43.524 INFO: manager: Copyright (C) 2003-2012
Oct 16 07:09:43.524 INFO: manager:   Noriaki Ando
Oct 16 07:09:43.524 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 07:09:43.524 INFO: manager: Manager starting.
Oct 16 07:09:43.524 INFO: manager: Starting local logging.
Oct 16 07:09:43.524 TRACE: manager: Manager::initORB()
Oct 16 07:09:43.524 DEBUG: manager: corba.args: 
Oct 16 07:09:43.524 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 23145
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 07:09:43.524 DEBUG: manager: corba.endpoint: 
Oct 16 07:09:43.524 DEBUG: manager: manager.is_master: NO
Oct 16 07:09:43.524 DEBUG: manager: corba.id: omniORB
Oct 16 07:09:43.525 TRACE: manager: Manager::initNaming()
Oct 16 07:09:43.525 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 07:09:43.525 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 07:09:43.525 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 07:09:43.525 TRACE: manager: Manager::getORB()
Oct 16 07:09:43.534 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 07:09:43.534 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 07:09:43.534 TRACE: manager: Manager::initFactories()
Oct 16 07:09:43.534 TRACE: manager: Manager::initExecContext()
Oct 16 07:09:43.534 TRACE: manager: Manager::initComposite()
Oct 16 07:09:43.534 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 07:09:43.534 TRACE: manager: Manager::initManagerServant()
Oct 16 07:09:43.534 TRACE: ManagerServant: This manager is slave.
Oct 16 07:09:43.534 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 07:09:43.534 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 07:09:43.534 TRACE: manager: Manager::getORB()
Oct 16 07:09:43.535 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 07:09:43.535 INFO: ManagerServant: Master manager not found
Oct 16 07:09:43.535 TRACE: manager: Manager::activateManager()
Oct 16 07:09:43.535 TRACE: manager: Manager::getPOAManager()
Oct 16 07:09:43.535 TRACE: manager: Manager::getPOAManager()
Oct 16 07:09:43.535 TRACE: manager: POA Manager activated.
Oct 16 07:09:43.535 TRACE: manager: Manager::initLocalService()
Oct 16 07:09:43.535 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 07:09:43.535 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 07:09:43.535 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 07:09:43.535 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 07:09:43.535 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 07:09:43.535 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 07:09:43.535 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 07:09:43.535 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 07:09:43.535 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 07:09:43.535 TRACE: manager: RTC basic propfile vendor: 
Oct 16 07:09:43.535 TRACE: manager: RTC basic propfile category: 
Oct 16 07:09:43.535 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 07:09:43.535 TRACE: manager: RTC basic propfile version: 
Oct 16 07:09:43.535 TRACE: manager: Manager::getORB()
Oct 16 07:09:43.535 TRACE: manager: Manager::getPOA()
Oct 16 07:09:43.535 TRACE: manager: Manager::getORB()
Oct 16 07:09:43.535 TRACE: manager: Manager::getPOA()
Oct 16 07:09:43.535 TRACE: : getProperties()
Oct 16 07:09:43.535 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 07:09:43.535 TRACE: : getProperties()
Oct 16 07:09:43.535 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 07:09:43.535 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 07:09:43.535 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 07:09:43.535 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 07:09:43.535 DEBUG: CameraImage: Port name: CameraImage
Oct 16 07:09:43.535 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 07:09:43.535 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 07:09:43.535 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 07:09:43.535 TRACE: : setProperties()
Oct 16 07:09:43.535 TRACE: : getTypeName()
Oct 16 07:09:43.535 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 07:09:43.535 TRACE: manager: RTC created: WebCamera
Oct 16 07:09:43.535 TRACE: WebCamera0: getCategory()
Oct 16 07:09:43.535 TRACE: WebCamera0: getTypeName()
Oct 16 07:09:43.535 TRACE: WebCamera0: getInstanceName()
Oct 16 07:09:43.536 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 07:09:43.536 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 07:09:43.536 TRACE: WebCamera0: setProperties()
Oct 16 07:09:43.536 TRACE: WebCamera0: setProperties()
Oct 16 07:09:43.536 TRACE: WebCamera0: getProperties()
Oct 16 07:09:43.536 TRACE: WebCamera0: getProperties()
Oct 16 07:09:43.536 TRACE: WebCamera0: getProperties()
Oct 16 07:09:43.536 TRACE: WebCamera0: getProperties()
Oct 16 07:09:43.536 TRACE: WebCamera0: initialize()
Oct 16 07:09:43.536 DEBUG: WebCamera0: getContextOptions()
Oct 16 07:09:43.536 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 07:09:43.536 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 07:09:43.536 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 07:09:43.536 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 07:09:43.536 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 07:09:43.536 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 07:09:43.536 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 07:09:43.536 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 07:09:43.536 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 07:09:43.536 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 07:09:43.536 TRACE: periodic_ecprofile: setObjRef()
Oct 16 07:09:43.536 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 07:09:43.536 TRACE: ec_base: setRate(1000000.000000)
Oct 16 07:09:43.536 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 07:09:43.536 INFO: ec_base: setRate(1000000.000000) done
Oct 16 07:09:43.536 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 07:09:43.536 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 07:09:43.536 TRACE: ec_base: init()
Oct 16 07:09:43.536 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:09:43.536 TRACE: ec_base: setRate(30.000000)
Oct 16 07:09:43.536 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 07:09:43.536 INFO: ec_base: setRate(30.000000) done
Oct 16 07:09:43.536 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 07:09:43.536 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 07:09:43.536 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 07:09:43.536 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 07:09:43.536 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 07:09:43.536 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 07:09:43.536 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 07:09:43.536 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 07:09:43.536 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 07:09:43.536 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 07:09:43.536 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 07:09:43.536 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 07:09:43.536 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 07:09:43.536 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 07:09:43.536 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 07:09:43.536 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 07:09:43.536 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 07:09:43.536 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 07:09:43.536 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 07:09:43.536 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 07:09:43.536 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 07:09:43.536 TRACE: periodic_ecprofile: setProperties()
Oct 16 07:09:43.536 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:09:43.536 TRACE: ec_worker: bindComponent()
Oct 16 07:09:43.536 TRACE: WebCamera0: bindContext()
Oct 16 07:09:43.536 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 07:09:43.536 TRACE: WebCamera0: getObjRef()
Oct 16 07:09:43.536 TRACE: manager: Manager::getPOA()
Oct 16 07:09:43.536 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 07:09:43.536 INFO: WebCamera0: 1 execution context was created.
Oct 16 07:09:43.536 TRACE: WebCamera0: on_initialize()
Oct 16 07:09:43.536 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 07:09:43.536 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 07:09:43.536 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 07:09:43.536 TRACE: WebCamera0: getObjRef()
Oct 16 07:09:43.536 TRACE: WebCamera0: get_component_profile()
Oct 16 07:09:43.536 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 07:09:43.536 TRACE: CameraImage: getPortProfile()
Oct 16 07:09:43.536 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 07:09:43.536 TRACE: CameraImage: getPortRef()
Oct 16 07:09:43.536 TRACE: CameraImage: getProfile()
Oct 16 07:09:43.536 TRACE: CameraImage: init()
Oct 16 07:09:43.536 DEBUG: CameraImage: : 

Oct 16 07:09:43.536 DEBUG: CameraImage: : 

Oct 16 07:09:43.536 TRACE: CameraImage: initConsumers()
Oct 16 07:09:43.537 TRACE: CameraImage: initProviders()
Oct 16 07:09:43.537 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 07:09:43.537 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 07:09:43.537 TRACE: manager: Manager::getPOA()
Oct 16 07:09:43.537 TRACE: manager: Manager::getPOA()
Oct 16 07:09:43.537 TRACE: manager: Manager::getPOA()
Oct 16 07:09:43.537 TRACE: manager: Manager::getORB()
Oct 16 07:09:43.537 TRACE: manager: Manager::getPOA()
Oct 16 07:09:43.537 TRACE: manager: Manager::getPOA()
Oct 16 07:09:43.537 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 07:09:43.537 TRACE: CameraCaptureService: init()
Oct 16 07:09:43.537 DEBUG: CameraCaptureService: : 

Oct 16 07:09:43.537 DEBUG: CameraCaptureService: : 

Oct 16 07:09:43.537 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 07:09:43.537 TRACE: WebCamera0: getObjRef()
Oct 16 07:09:43.537 TRACE: WebCamera0: get_component_profile()
Oct 16 07:09:43.537 TRACE: CameraImage: get_port_profile()
Oct 16 07:09:43.537 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 07:09:43.537 TRACE: CameraCaptureService: getPortProfile()
Oct 16 07:09:43.537 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 07:09:43.537 TRACE: CameraImage: get_port_profile()
Oct 16 07:09:43.537 TRACE: CameraCaptureService: getPortRef()
Oct 16 07:09:43.537 TRACE: CameraCaptureService: getProfile()
Oct 16 07:09:43.537 TRACE: CameraImage: getProfile()
Oct 16 07:09:43.537 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 07:09:43.537 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 07:09:43.537 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 07:09:43.537 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 07:09:43.537 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 07:09:43.537 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 07:09:43.537 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 07:09:43.537 TRACE: WebCamera0: updateParameters(default)
Oct 16 07:09:43.537 TRACE: WebCamera0: getInstanceName()
Oct 16 07:09:43.537 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 07:09:43.537 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 07:09:43.537 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 07:09:43.537 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 07:09:43.537 DEBUG: WebCamera0: EC[0] starting.
Oct 16 07:09:43.537 TRACE: ec_base: start()
Oct 16 07:09:43.537 TRACE: ec_worker: start()
Oct 16 07:09:43.537 TRACE: WebCamera0: on_startup(0)
Oct 16 07:09:43.537 TRACE: WebCamera0: onStartup(0)
Oct 16 07:09:43.537 DEBUG: ec_worker: 1 components started.
Oct 16 07:09:43.537 TRACE: periodic_ec: open()
Oct 16 07:09:43.537 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 07:09:43.537 TRACE: WebCamera0: getInstanceName()
Oct 16 07:09:43.537 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 07:09:43.537 TRACE: WebCamera0: getInstanceName()
Oct 16 07:09:43.537 TRACE: WebCamera0: getNamingNames()

Oct 16 07:09:43.537 TRACE: periodic_ec: Oct 16 07:09:43.537 TRACE: manager: svc()Bind name: WebCamera0.rtc

Oct 16 07:09:43.537 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 07:09:43.537 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 07:09:43.537 TRACE: WebCamera0: getObjRef()
Oct 16 07:09:43.537 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 07:09:47.849 TRACE: WebCamera0: get_component_profile()
Oct 16 07:09:47.849 TRACE: CameraImage: get_port_profile()
Oct 16 07:09:47.849 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:09:49.192 TRACE: WebCamera0: get_component_profile()
Oct 16 07:09:49.192 TRACE: CameraImage: get_port_profile()
Oct 16 07:09:49.192 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:09:53.819 TRACE: NamingManager: NamingManager::update()
Oct 16 07:09:53.819 TRACE: NamingOnCorba: isAlive()
Oct 16 07:09:56.489 TRACE: manager: Manager::shutdown()
Oct 16 07:09:56.489 TRACE: manager: Manager::shutdownComponents()
Oct 16 07:09:56.489 TRACE: WebCamera0: exit()
Oct 16 07:09:56.489 TRACE: ec_base: deactivateComponent()
Oct 16 07:09:56.489 TRACE: ec_worker: deactivateComponent()
Oct 16 07:09:56.489 ERROR: ec_worker: State of the RTC is not ACTIVE_STATE.
Oct 16 07:09:56.489 TRACE: ec_base: stop()
Oct 16 07:09:56.489 TRACE: ec_worker: stop()
Oct 16 07:09:56.489 TRACE: WebCamera0: on_shutdown(0)
Oct 16 07:09:56.489 TRACE: WebCamera0: onShutdown(0)
Oct 16 07:09:56.489 TRACE: WebCamera0: finalize()
Oct 16 07:09:56.489 TRACE: WebCamera0: on_finalize()
Oct 16 07:09:56.489 TRACE: WebCamera0: shutdown()
Oct 16 07:09:56.489 TRACE: WebCamera0: finalizePorts()
Oct 16 07:09:56.489 TRACE: CameraImage: deactivateInterfaces()
Oct 16 07:09:56.489 TRACE: manager: Manager::getPOA()
Oct 16 07:09:56.489 TRACE: CameraImage: disconnect_all()
Oct 16 07:09:56.489 DEBUG: CameraImage: disconnecting 0 connections.
Oct 16 07:09:56.489 TRACE: CameraImage: getProfile()
Oct 16 07:09:56.489 TRACE: CameraImage: get_port_profile()
Oct 16 07:09:56.489 TRACE: CameraImage: setPortRef()
Oct 16 07:09:56.489 TRACE: CameraImage: getProfile()
Oct 16 07:09:56.489 TRACE: CameraCaptureService: disconnect_all()
Oct 16 07:09:56.489 DEBUG: CameraCaptureService: disconnecting 0 connections.
Oct 16 07:09:56.489 TRACE: CameraCaptureService: getProfile()
Oct 16 07:09:56.489 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:09:56.489 TRACE: CameraCaptureService: setPortRef()
Oct 16 07:09:56.489 TRACE: CameraCaptureService: getProfile()
Oct 16 07:09:56.489 TRACE: WebCamera0: finalizeContexts()
Oct 16 07:09:56.489 TRACE: periodic_ecprofile: getObjRef()
Oct 16 07:09:56.489 TRACE: ec_base: stop()
Oct 16 07:09:56.489 TRACE: ec_worker: stop()
Oct 16 07:09:56.489 WARNING: ec_worker: ExecutionContext is already stopped.
Oct 16 07:09:56.489 ERROR: ec_base: Invoking on_shutdown() for each RTC failed.
Oct 16 07:09:56.489 DEBUG: WebCamera0: Deactivating Execution Context.
Oct 16 07:09:56.489 DEBUG: WebCamera0: Deactivating EC done.
Oct 16 07:09:56.489 TRACE: periodic_ec: ~PeriodicExecutionContext()
Oct 16 07:10:14.795 INFO: manager: 1.1.1
Oct 16 07:10:14.795 INFO: manager: Copyright (C) 2003-2012
Oct 16 07:10:14.795 INFO: manager:   Noriaki Ando
Oct 16 07:10:14.796 INFO: manager:   Intelligent Systems Research Institute, AIST
Oct 16 07:10:14.796 INFO: manager: Manager starting.
Oct 16 07:10:14.796 INFO: manager: Starting local logging.
Oct 16 07:10:14.796 TRACE: manager: Manager::initORB()
Oct 16 07:10:14.796 DEBUG: manager: corba.args: 
Oct 16 07:10:14.796 DEBUG: manager: - config
  - version: 1.1.1
- openrtm
  - name: OpenRTM-aist-1.1.1
  - version: 1.1.1
- manager
  - instance_name: manager
  - name: manager_cpp
  - naming_formats: %n_cpp.mgr
  - pid: 23160
  - refstring_path: /var/log/rtcmanager.ref
  - modules
    - load_path: ./
    - abs_path_allowed: YES
    - C++
      - manager_cmd: rtcd
      - profile_cmd: rtcprof
      - suffixes: dylib
      - load_paths: ./
    - Python
      - manager_cmd: rtcd_python
      - profile_cmd: rtcprof_python
      - suffixes: py
      - load_paths: ./
    - Java
      - manager_cmd: rtcd_java
      - profile_cmd: rtcprof_java
      - suffixes: class
      - load_paths: ./
    - preload: 
    - config_path: 
    - download_allowed: 
    - init_func_suffix: 
    - init_func_prefix: 
  - is_master: NO
  - corba_servant: YES
  - shutdown_on_nortcs: NO
  - shutdown_auto: NO
  - auto_shutdown_duration: 10.0
  - command: rtcd
  - supported_languages: C++, Python, Java
  - local_service
    - enabled_services: ALL
  - components
    - precreate: 
- os
  - name: Darwin
  - release: 14.5.0
  - version: Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64
  - arch: x86_64
  - hostname: visnu
- logger
  - enable: YES
  - file_name: ./log/standalonertc_WebCamera
  - date_format: %b %d %H:%M:%S.%Q
  - log_level: TRACE
  - stream_lock: NO
  - master_logger: 
  - clock_type: 
- module
  - conf_path: 
  - load_path: 
- naming
  - enable: YES
  - type: corba
  - formats: %n.rtc
  - update
    - enable: YES
    - interval: 10.0
- timer
  - enable: YES
  - tick: 0.1
- corba
  - args: 
  - endpoint: 
  - id: omniORB
  - nameservers: localhost:2809
  - master_manager: localhost:2810
  - nameservice
    - replace_endpoint: NO
- exec_cxt
  - periodic
    - type: PeriodicExecutionContext
    - rate: 1000
  - sync_transition: YES
  - transition_timeout: 0.5
- sdo
  - service
    - provider
      - enabled_service: ALL
    - consumer
      - enabled_service: ALL
- ImageProcessing
  - WebCamera0
    - config_file: conf/WebCamera0.conf
- config_file: conf/rtc_WebCamera.conf

Oct 16 07:10:14.796 DEBUG: manager: corba.endpoint: 
Oct 16 07:10:14.796 DEBUG: manager: manager.is_master: NO
Oct 16 07:10:14.796 DEBUG: manager: corba.id: omniORB
Oct 16 07:10:14.797 TRACE: manager: Manager::initNaming()
Oct 16 07:10:14.797 TRACE: manager: Register Naming Server: corba/localhost:2809
Oct 16 07:10:14.797 TRACE: NamingManager: NamingManager::registerNameServer(corba, localhost:2809)
Oct 16 07:10:14.797 TRACE: NamingManager: createNamingObj(method = corba, nameserver = localhost:2809
Oct 16 07:10:14.797 TRACE: manager: Manager::getORB()
Oct 16 07:10:14.806 WARNING: NamingOnCorba: No endpoint for the CORBA naming service (localhost) was found.
Oct 16 07:10:14.806 INFO: NamingManager: NameServer connection succeeded: corba/localhost:2809
Oct 16 07:10:14.806 TRACE: manager: Manager::initFactories()
Oct 16 07:10:14.806 TRACE: manager: Manager::initExecContext()
Oct 16 07:10:14.806 TRACE: manager: Manager::initComposite()
Oct 16 07:10:14.806 TRACE: manager: Manager::registerFactory(PeriodicECSharedComposite)
Oct 16 07:10:14.806 TRACE: manager: Manager::initManagerServant()
Oct 16 07:10:14.806 TRACE: ManagerServant: This manager is slave.
Oct 16 07:10:14.806 TRACE: ManagerServant: findManager(host_port = localhost:2810)
Oct 16 07:10:14.806 DEBUG: ManagerServant: corbaloc: corbaloc::localhost:2810/manager_cpp
Oct 16 07:10:14.806 TRACE: manager: Manager::getORB()
Oct 16 07:10:14.807 DEBUG: ManagerServant: CORBA SystemException cought (CORBA::TRANSIENT)
Oct 16 07:10:14.807 INFO: ManagerServant: Master manager not found
Oct 16 07:10:14.807 TRACE: manager: Manager::activateManager()
Oct 16 07:10:14.807 TRACE: manager: Manager::getPOAManager()
Oct 16 07:10:14.807 TRACE: manager: Manager::getPOAManager()
Oct 16 07:10:14.807 TRACE: manager: POA Manager activated.
Oct 16 07:10:14.807 TRACE: manager: Manager::initLocalService()
Oct 16 07:10:14.807 TRACE: LocalServiceAdmin: LocalServiceAdmin::LocalServiceAdmin()
Oct 16 07:10:14.807 TRACE: LocalServiceAdmin: LocalServiceAdmin::init():
Oct 16 07:10:14.807 DEBUG: LocalServiceAdmin: - enabled_services: ALL
- modules: 

Oct 16 07:10:14.807 INFO: LocalServiceAdmin: All the local services are enabled.
Oct 16 07:10:14.807 DEBUG: LocalServiceAdmin: Available services: 
Oct 16 07:10:14.807 DEBUG: manager: LocalServiceAdmin's properties:
Oct 16 07:10:14.807 DEBUG: manager: - enabled_services: ALL
- modules: 

Oct 16 07:10:14.807 TRACE: manager: Manager::registerFactory(WebCamera)
Oct 16 07:10:14.807 TRACE: manager: Manager::createComponent(WebCamera)
Oct 16 07:10:14.807 TRACE: manager: RTC basic propfile vendor: 
Oct 16 07:10:14.807 TRACE: manager: RTC basic propfile category: 
Oct 16 07:10:14.807 TRACE: manager: RTC basic propfile implementation_id: WebCamera
Oct 16 07:10:14.807 TRACE: manager: RTC basic propfile version: 
Oct 16 07:10:14.807 TRACE: manager: Manager::getORB()
Oct 16 07:10:14.807 TRACE: manager: Manager::getPOA()
Oct 16 07:10:14.807 TRACE: manager: Manager::getORB()
Oct 16 07:10:14.807 TRACE: manager: Manager::getPOA()
Oct 16 07:10:14.807 TRACE: : getProperties()
Oct 16 07:10:14.807 TRACE: SdoServiceAdmin: SdoServiceAdmin::SdoServiceAdmin()
Oct 16 07:10:14.807 TRACE: : getProperties()
Oct 16 07:10:14.807 DEBUG: SdoServiceAdmin: sdo.service.provider.enabled_services: 
Oct 16 07:10:14.807 DEBUG: SdoServiceAdmin: sdo.service.provider.available_services: 
Oct 16 07:10:14.807 DEBUG: SdoServiceAdmin: sdo.service.consumer.enabled_services: 
Oct 16 07:10:14.807 DEBUG: SdoServiceAdmin: sdo.service.consumer.available_services: 
Oct 16 07:10:14.807 DEBUG: CameraImage: Port name: CameraImage
Oct 16 07:10:14.807 DEBUG: CameraImage: setting port.port_type: DataOutPort
Oct 16 07:10:14.807 DEBUG: CameraImage: setting dataport.data_type: IDL:Img/TimedCameraImage:1.0
Oct 16 07:10:14.807 DEBUG: CameraImage: available subscription_type: flush,new,periodic
Oct 16 07:10:14.807 TRACE: : setProperties()
Oct 16 07:10:14.808 TRACE: : getTypeName()
Oct 16 07:10:14.808 TRACE: WebCamera0: setInstanceName(WebCamera0)
Oct 16 07:10:14.808 TRACE: manager: RTC created: WebCamera
Oct 16 07:10:14.808 TRACE: WebCamera0: getCategory()
Oct 16 07:10:14.808 TRACE: WebCamera0: getTypeName()
Oct 16 07:10:14.808 TRACE: WebCamera0: getInstanceName()
Oct 16 07:10:14.808 INFO: manager: Component instance conf file: conf/WebCamera0.conf loaded.
Oct 16 07:10:14.808 DEBUG: manager: - exec_cxt
  - periodic
    - rate: 30.0

Oct 16 07:10:14.808 TRACE: WebCamera0: setProperties()
Oct 16 07:10:14.808 TRACE: WebCamera0: setProperties()
Oct 16 07:10:14.808 TRACE: WebCamera0: getProperties()
Oct 16 07:10:14.808 TRACE: WebCamera0: getProperties()
Oct 16 07:10:14.808 TRACE: WebCamera0: getProperties()
Oct 16 07:10:14.808 TRACE: WebCamera0: getProperties()
Oct 16 07:10:14.808 TRACE: WebCamera0: initialize()
Oct 16 07:10:14.808 DEBUG: WebCamera0: getContextOptions()
Oct 16 07:10:14.808 TRACE: WebCamera0: getGlobalContextOptions()
Oct 16 07:10:14.808 DEBUG: WebCamera0: Global EC options are specified.
Oct 16 07:10:14.808 DEBUG: WebCamera0: - type: PeriodicExecutionContext
- rate: 30.0

Oct 16 07:10:14.808 DEBUG: WebCamera0: Copying inherited EC options.
Oct 16 07:10:14.808 TRACE: WebCamera0: getPrivateContextOptions()
Oct 16 07:10:14.808 DEBUG: WebCamera0: No component specific EC specified.
Oct 16 07:10:14.808 TRACE: ec_worker: ExecutionContextWorker()
Oct 16 07:10:14.808 TRACE: periodic_ecprofile: ExecutionContextProfile()
Oct 16 07:10:14.808 DEBUG: periodic_ecprofile: Actual rate: 0 [sec], 1 [usec]
Oct 16 07:10:14.808 TRACE: periodic_ec: PeriodicExecutionContext()
Oct 16 07:10:14.808 TRACE: periodic_ecprofile: setObjRef()
Oct 16 07:10:14.808 TRACE: periodic_ecprofile: setKind(PERIODIC)
Oct 16 07:10:14.808 TRACE: ec_base: setRate(1000000.000000)
Oct 16 07:10:14.808 TRACE: periodic_ecprofile: setRate(1000000.000000)
Oct 16 07:10:14.808 INFO: ec_base: setRate(1000000.000000) done
Oct 16 07:10:14.808 DEBUG: periodic_ec: Actual period: 0 [sec], 1 [usec]
Oct 16 07:10:14.808 DEBUG: WebCamera0: EC (PeriodicExecutionContext) created.
Oct 16 07:10:14.808 TRACE: ec_base: init()
Oct 16 07:10:14.808 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:10:14.808 TRACE: ec_base: setRate(30.000000)
Oct 16 07:10:14.808 TRACE: periodic_ecprofile: setRate(30.000000)
Oct 16 07:10:14.808 INFO: ec_base: setRate(30.000000) done
Oct 16 07:10:14.808 TRACE: ec_base: setTransitionMode(sync_transition)
Oct 16 07:10:14.808 DEBUG: ec_base: Transition Mode: sync_transition = YES
Oct 16 07:10:14.808 TRACE: ec_base: setTransitionMode(sync_activation)
Oct 16 07:10:14.808 DEBUG: ec_base: Configuration sync_activation not found.
Oct 16 07:10:14.808 TRACE: ec_base: setTransitionMode(sync_deactivation)
Oct 16 07:10:14.808 DEBUG: ec_base: Configuration sync_deactivation not found.
Oct 16 07:10:14.808 TRACE: ec_base: setTransitionMode(sync_reset)
Oct 16 07:10:14.808 DEBUG: ec_base: Configuration sync_reset not found.
Oct 16 07:10:14.808 TRACE: ec_base: setTimeout(transition_timeout)
Oct 16 07:10:14.808 DEBUG: ec_base: Timeout (transition_timeout): 0.500000 [s]
Oct 16 07:10:14.808 TRACE: ec_base: setTimeout(activation_timeout)
Oct 16 07:10:14.808 DEBUG: ec_base: Configuration activation_timeout not found.
Oct 16 07:10:14.808 TRACE: ec_base: setTimeout(deactivation_timeout)
Oct 16 07:10:14.808 DEBUG: ec_base: Configuration deactivation_timeout not found.
Oct 16 07:10:14.808 TRACE: ec_base: setTimeout(reset_timeout)
Oct 16 07:10:14.808 DEBUG: ec_base: Configuration reset_timeout not found.
Oct 16 07:10:14.808 DEBUG: ec_base: ExecutionContext's configurations:
Oct 16 07:10:14.808 DEBUG: ec_base: Exec rate   : 30.000000 [Hz]
Oct 16 07:10:14.808 DEBUG: ec_base: Activation  : Sync = YES, Timeout = 0.500000
Oct 16 07:10:14.808 DEBUG: ec_base: Deactivation: Sync = YES, Timeout = 0.500000
Oct 16 07:10:14.808 DEBUG: ec_base: Reset       : Sync = YES, Timeout = 0.500000
Oct 16 07:10:14.808 TRACE: periodic_ecprofile: setProperties()
Oct 16 07:10:14.808 DEBUG: periodic_ecprofile: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:10:14.808 TRACE: ec_worker: bindComponent()
Oct 16 07:10:14.808 TRACE: WebCamera0: bindContext()
Oct 16 07:10:14.808 DEBUG: ec_worker: bindContext returns id = 0
Oct 16 07:10:14.808 TRACE: WebCamera0: getObjRef()
Oct 16 07:10:14.808 TRACE: manager: Manager::getPOA()
Oct 16 07:10:14.808 DEBUG: ec_worker: bindComponent() succeeded.
Oct 16 07:10:14.808 INFO: WebCamera0: 1 execution context was created.
Oct 16 07:10:14.808 TRACE: WebCamera0: on_initialize()
Oct 16 07:10:14.808 DEBUG: WebCamera0: Calling onInitialize().
Oct 16 07:10:14.808 TRACE: WebCamera0: addOutPort(CameraImage)
Oct 16 07:10:14.808 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 07:10:14.808 TRACE: WebCamera0: getObjRef()
Oct 16 07:10:14.808 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:14.809 TRACE: CameraImage: setOwner(WebCamera0)
Oct 16 07:10:14.809 TRACE: CameraImage: getPortProfile()
Oct 16 07:10:14.809 TRACE: CameraImage: getName() = WebCamera0.CameraImage
Oct 16 07:10:14.809 TRACE: CameraImage: getPortRef()
Oct 16 07:10:14.809 TRACE: CameraImage: getProfile()
Oct 16 07:10:14.809 TRACE: CameraImage: init()
Oct 16 07:10:14.809 DEBUG: CameraImage: : 

Oct 16 07:10:14.809 DEBUG: CameraImage: : 

Oct 16 07:10:14.809 TRACE: CameraImage: initConsumers()
Oct 16 07:10:14.809 TRACE: CameraImage: initProviders()
Oct 16 07:10:14.809 DEBUG: CameraImage: dataflow_type pull is supported
Oct 16 07:10:14.809 TRACE: CameraCaptureService: registerProvider(instance=CameraCaptureService, type_name=Img::CameraCaptureService)
Oct 16 07:10:14.809 TRACE: manager: Manager::getPOA()
Oct 16 07:10:14.809 TRACE: manager: Manager::getPOA()
Oct 16 07:10:14.809 TRACE: manager: Manager::getPOA()
Oct 16 07:10:14.809 TRACE: manager: Manager::getORB()
Oct 16 07:10:14.809 TRACE: manager: Manager::getPOA()
Oct 16 07:10:14.809 TRACE: manager: Manager::getPOA()
Oct 16 07:10:14.809 TRACE: WebCamera0: addPort(CrobaPort)
Oct 16 07:10:14.809 TRACE: CameraCaptureService: init()
Oct 16 07:10:14.809 DEBUG: CameraCaptureService: : 

Oct 16 07:10:14.809 DEBUG: CameraCaptureService: : 

Oct 16 07:10:14.809 TRACE: WebCamera0: addPort(PortBase&)
Oct 16 07:10:14.809 TRACE: WebCamera0: getObjRef()
Oct 16 07:10:14.809 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:14.809 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:14.809 TRACE: CameraCaptureService: setOwner(WebCamera0)
Oct 16 07:10:14.809 TRACE: CameraCaptureService: getPortProfile()
Oct 16 07:10:14.809 TRACE: CameraCaptureService: getName() = WebCamera0.CameraCaptureService
Oct 16 07:10:14.809 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:14.809 TRACE: CameraCaptureService: getPortRef()
Oct 16 07:10:14.809 TRACE: CameraCaptureService: getProfile()
Oct 16 07:10:14.809 TRACE: CameraImage: getProfile()
Oct 16 07:10:14.809 TRACE: WebCamera0: bindParameter(camera_id (default: 0))
Oct 16 07:10:14.809 TRACE: WebCamera0: bindParameter(output_color_format (default: RGB))
Oct 16 07:10:14.809 TRACE: WebCamera0: bindParameter(camera_param_filename (default: ..\..\camera.yml))
Oct 16 07:10:14.809 TRACE: WebCamera0: bindParameter(undistortion_flag (default: false))
Oct 16 07:10:14.809 TRACE: WebCamera0: bindParameter(preview_window (default: false))
Oct 16 07:10:14.809 TRACE: WebCamera0: bindParameter(cap_continuous_flag (default: false))
Oct 16 07:10:14.809 TRACE: WebCamera0: bindParameter(compression_ratio (default: 75))
Oct 16 07:10:14.809 TRACE: WebCamera0: updateParameters(default)
Oct 16 07:10:14.809 TRACE: WebCamera0: getInstanceName()
Oct 16 07:10:14.809 DEBUG: WebCamera0: onInitialize() succeeded.
Oct 16 07:10:14.809 DEBUG: WebCamera0: Active configuration set: default exists.
Oct 16 07:10:14.809 INFO: WebCamera0: Initial active configuration set is default.
Oct 16 07:10:14.809 DEBUG: WebCamera0: on_initialize() was properly done.
Oct 16 07:10:14.809 DEBUG: WebCamera0: EC[0] starting.
Oct 16 07:10:14.809 TRACE: ec_base: start()
Oct 16 07:10:14.809 TRACE: ec_worker: start()
Oct 16 07:10:14.809 TRACE: WebCamera0: on_startup(0)
Oct 16 07:10:14.809 TRACE: WebCamera0: onStartup(0)
Oct 16 07:10:14.809 DEBUG: ec_worker: 1 components started.
Oct 16 07:10:14.809 TRACE: periodic_ec: open()
Oct 16 07:10:14.809 TRACE: manager: RTC initialization succeeded: WebCamera
Oct 16 07:10:14.809 TRACE: WebCamera0: getInstanceName()
Oct 16 07:10:14.809 TRACE: manager: Manager::registerComponent(WebCamera0)
Oct 16 07:10:14.809 TRACE: WebCamera0: getInstanceName()
Oct 16 07:10:14.809 TRACE: periodic_ec: svc()

Oct 16 07:10:14.809 TRACE: WebCamera0: getNamingNames()
Oct 16 07:10:14.809 TRACE: manager: Bind name: WebCamera0.rtc
Oct 16 07:10:14.809 TRACE: NamingManager: NamingManager::bindObject(WebCamera0.rtc)
Oct 16 07:10:14.809 TRACE: NamingOnCorba: bindObject(name = WebCamera0.rtc, rtobj)
Oct 16 07:10:14.809 TRACE: WebCamera0: getObjRef()
Oct 16 07:10:14.809 TRACE: manager: Manager::runManager(): non-blocking mode
Oct 16 07:10:17.821 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:17.821 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:17.821 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:10:20.031 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:20.031 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:20.031 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:10:21.197 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:21.197 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:21.197 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:10:21.198 TRACE: WebCamera0: get_owned_context()
Oct 16 07:10:21.198 TRACE: WebCamera0: get_context_handle()
Oct 16 07:10:21.198 TRACE: ec_base: getProfile()
Oct 16 07:10:21.198 TRACE: periodic_ecprofile: getProfile()
Oct 16 07:10:21.198 DEBUG: ec_base: kind: PERIODIC
Oct 16 07:10:21.198 DEBUG: ec_base: rate: 30.000000
Oct 16 07:10:21.198 DEBUG: ec_base: properties:
Oct 16 07:10:21.198 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:10:21.198 TRACE: ec_base: activateComponent()
Oct 16 07:10:21.198 TRACE: ec_worker: activateComponent()
Oct 16 07:10:21.198 DEBUG: ec_worker: Component found in the EC.
Oct 16 07:10:21.198 DEBUG: ec_worker: Component is in INACTIVE state. Going to ACTIVE state.
Oct 16 07:10:21.198 DEBUG: ec_worker: activateComponent() done.
Oct 16 07:10:21.198 DEBUG: ec_base: Synchronous activation mode. Waiting for the RTC to be ACTIVE state. 
Oct 16 07:10:21.198 TRACE: periodic_ec: onWaitingActivated(count = 0)
Oct 16 07:10:21.198 DEBUG: ec_base: Timeout is 0.500000 [s] (30.000000 [s] in 15 times)
Oct 16 07:10:21.198 TRACE: periodic_ec: onWaitingActivated(count = 0)
Oct 16 07:10:21.233 DEBUG: ec_base: Waiting to be ACTIVE state. 0.034363 [s] slept (0/15)
Oct 16 07:10:21.233 TRACE: periodic_ec: onWaitingActivated(count = 1)
Oct 16 07:10:21.235 TRACE: WebCamera0: on_activated(0)
Oct 16 07:10:21.235 TRACE: CameraImage: activateInterfaces()
Oct 16 07:10:21.235 TRACE: manager: Manager::getPOA()
Oct 16 07:10:21.266 DEBUG: ec_base: Waiting to be ACTIVE state. 0.067991 [s] slept (1/15)
Oct 16 07:10:21.266 DEBUG: ec_base: Current state is ACTIVE_STATE
Oct 16 07:10:21.266 TRACE: periodic_ec: onActivated(count = 2)
Oct 16 07:10:21.266 DEBUG: ec_base: onActivated() done.
Oct 16 07:10:21.869 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 07:10:21.869 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 07:10:21.904 TRACE: CameraImage: DataType write()
Oct 16 07:10:21.936 TRACE: CameraImage: DataType write()
Oct 16 07:10:21.968 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.001 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.035 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.065 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.098 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.131 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.162 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.201 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.232 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.263 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.294 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.331 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.363 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.394 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.430 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.463 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.495 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.538 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.582 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.626 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.658 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.703 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.744 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.789 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.829 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.885 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.930 TRACE: CameraImage: DataType write()
Oct 16 07:10:22.981 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.034 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.080 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.131 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.175 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.230 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.281 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.325 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.379 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.428 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.485 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.528 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.583 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.628 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.685 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.727 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.781 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.833 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.880 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.931 TRACE: CameraImage: DataType write()
Oct 16 07:10:23.975 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.028 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.084 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.130 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.180 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.235 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.278 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.333 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.375 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.429 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.477 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.532 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.591 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.620 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.650 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:24.651 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:24.651 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:10:24.651 TRACE: WebCamera0: get_owned_context()
Oct 16 07:10:24.651 TRACE: WebCamera0: get_context_handle()
Oct 16 07:10:24.652 TRACE: ec_base: getProfile()
Oct 16 07:10:24.652 TRACE: periodic_ecprofile: getProfile()
Oct 16 07:10:24.652 DEBUG: ec_base: kind: PERIODIC
Oct 16 07:10:24.652 DEBUG: ec_base: rate: 30.000000
Oct 16 07:10:24.652 DEBUG: ec_base: properties:
Oct 16 07:10:24.652 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:10:24.652 TRACE: ec_base: deactivateComponent()
Oct 16 07:10:24.652 TRACE: ec_worker: deactivateComponent()
Oct 16 07:10:24.652 DEBUG: ec_base: Synchronous deactivation mode. Waiting for the RTC to be INACTIVE state. 
Oct 16 07:10:24.652 TRACE: periodic_ec: onWaitingDeactivated(count = 0)
Oct 16 07:10:24.652 TRACE: periodic_ec: All RTCs are INACTIVE. Stopping worker thread.
Oct 16 07:10:24.652 DEBUG: ec_base: Timeout is 0.500000 [s] (30.000000 [s] in 15 times)
Oct 16 07:10:24.652 TRACE: periodic_ec: onWaitingDeactivated(count = 0)
Oct 16 07:10:24.655 TRACE: WebCamera0: on_deactivated(0)
Oct 16 07:10:24.655 TRACE: CameraImage: deactivateInterfaces()
Oct 16 07:10:24.655 TRACE: manager: Manager::getPOA()
Oct 16 07:10:24.681 TRACE: CameraImage: DataType write()
Oct 16 07:10:24.685 DEBUG: ec_base: Waiting to be INACTIVE state. Sleeping 0.033403 [s] (0/15)
Oct 16 07:10:24.685 DEBUG: ec_base: Current state is INACTIVE_STATE
Oct 16 07:10:24.685 TRACE: periodic_ec: onDeactivated(count = 1)
Oct 16 07:10:24.685 DEBUG: ec_base: onDeactivated() done.
Oct 16 07:10:25.096 TRACE: NamingManager: NamingManager::update()
Oct 16 07:10:25.096 TRACE: NamingOnCorba: isAlive()
Oct 16 07:10:27.525 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:27.525 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:27.525 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:10:27.526 TRACE: WebCamera0: get_owned_context()
Oct 16 07:10:27.526 TRACE: WebCamera0: get_context_handle()
Oct 16 07:10:27.526 TRACE: ec_base: getProfile()
Oct 16 07:10:27.526 TRACE: periodic_ecprofile: getProfile()
Oct 16 07:10:27.526 DEBUG: ec_base: kind: PERIODIC
Oct 16 07:10:27.526 DEBUG: ec_base: rate: 30.000000
Oct 16 07:10:27.526 DEBUG: ec_base: properties:
Oct 16 07:10:27.526 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:10:27.526 TRACE: ec_base: activateComponent()
Oct 16 07:10:27.526 TRACE: ec_worker: activateComponent()
Oct 16 07:10:27.526 DEBUG: ec_worker: Component found in the EC.
Oct 16 07:10:27.526 DEBUG: ec_worker: Component is in INACTIVE state. Going to ACTIVE state.
Oct 16 07:10:27.526 DEBUG: ec_worker: activateComponent() done.
Oct 16 07:10:27.526 DEBUG: ec_base: Synchronous activation mode. Waiting for the RTC to be ACTIVE state. 
Oct 16 07:10:27.526 TRACE: periodic_ec: onWaitingActivated(count = 0)
Oct 16 07:10:27.526 DEBUG: ec_base: Timeout is 0.500000 [s] (30.000000 [s] in 15 times)
Oct 16 07:10:27.526 TRACE: periodic_ec: onWaitingActivated(count = 0)
Oct 16 07:10:27.560 TRACE: WebCamera0: on_activated(0)
Oct 16 07:10:27.560 TRACE: CameraImage: activateInterfaces()
Oct 16 07:10:27.560 TRACE: manager: Manager::getPOA()
Oct 16 07:10:27.560 DEBUG: ec_base: Waiting to be ACTIVE state. 0.034346 [s] slept (0/15)
Oct 16 07:10:27.560 DEBUG: ec_base: Current state is ACTIVE_STATE
Oct 16 07:10:27.560 TRACE: periodic_ec: onActivated(count = 1)
Oct 16 07:10:27.560 DEBUG: ec_base: onActivated() done.
Oct 16 07:10:28.076 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 07:10:28.076 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 07:10:28.108 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.145 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.177 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.211 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.242 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.275 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.312 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.342 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.378 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.408 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.438 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.478 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.505 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.536 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.574 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.606 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.638 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.672 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.708 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.746 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.794 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.834 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.879 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.922 TRACE: CameraImage: DataType write()
Oct 16 07:10:28.965 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.022 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.066 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.121 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.172 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.215 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.272 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.311 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.369 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.420 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.465 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.520 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.569 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.618 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.668 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.712 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.769 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.842 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.868 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.901 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:29.901 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:29.901 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:10:29.901 TRACE: WebCamera0: get_owned_context()
Oct 16 07:10:29.902 TRACE: WebCamera0: get_context_handle()
Oct 16 07:10:29.902 TRACE: ec_base: getProfile()
Oct 16 07:10:29.902 TRACE: periodic_ecprofile: getProfile()
Oct 16 07:10:29.902 DEBUG: ec_base: kind: PERIODIC
Oct 16 07:10:29.902 DEBUG: ec_base: rate: 30.000000
Oct 16 07:10:29.902 DEBUG: ec_base: properties:
Oct 16 07:10:29.902 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:10:29.902 TRACE: ec_base: deactivateComponent()
Oct 16 07:10:29.902 TRACE: ec_worker: deactivateComponent()
Oct 16 07:10:29.902 DEBUG: ec_base: Synchronous deactivation mode. Waiting for the RTC to be INACTIVE state. 
Oct 16 07:10:29.902 TRACE: periodic_ec: onWaitingDeactivated(count = 0)
Oct 16 07:10:29.902 TRACE: periodic_ec: All RTCs are INACTIVE. Stopping worker thread.
Oct 16 07:10:29.902 DEBUG: ec_base: Timeout is 0.500000 [s] (30.000000 [s] in 15 times)
Oct 16 07:10:29.902 TRACE: periodic_ec: onWaitingDeactivated(count = 0)
Oct 16 07:10:29.919 TRACE: CameraImage: DataType write()
Oct 16 07:10:29.931 TRACE: WebCamera0: on_deactivated(0)
Oct 16 07:10:29.931 TRACE: CameraImage: deactivateInterfaces()
Oct 16 07:10:29.931 TRACE: manager: Manager::getPOA()
Oct 16 07:10:29.936 DEBUG: ec_base: Waiting to be INACTIVE state. Sleeping 0.034375 [s] (0/15)
Oct 16 07:10:29.936 DEBUG: ec_base: Current state is INACTIVE_STATE
Oct 16 07:10:29.936 TRACE: periodic_ec: onDeactivated(count = 1)
Oct 16 07:10:29.936 DEBUG: ec_base: onDeactivated() done.
Oct 16 07:10:29.963 TRACE: CameraImage: DataType write()
Oct 16 07:10:31.652 TRACE: WebCamera0: get_component_profile()
Oct 16 07:10:31.652 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:31.652 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:10:31.652 TRACE: WebCamera0: get_owned_context()
Oct 16 07:10:31.652 TRACE: WebCamera0: get_context_handle()
Oct 16 07:10:31.653 TRACE: ec_base: getProfile()
Oct 16 07:10:31.653 TRACE: periodic_ecprofile: getProfile()
Oct 16 07:10:31.653 DEBUG: ec_base: kind: PERIODIC
Oct 16 07:10:31.653 DEBUG: ec_base: rate: 30.000000
Oct 16 07:10:31.653 DEBUG: ec_base: properties:
Oct 16 07:10:31.653 DEBUG: ec_base: - sync_transition: YES
- transition_timeout: 0.5
- type: PeriodicExecutionContext
- rate: 30.0
- name: 

Oct 16 07:10:31.653 TRACE: ec_base: activateComponent()
Oct 16 07:10:31.653 TRACE: ec_worker: activateComponent()
Oct 16 07:10:31.653 DEBUG: ec_worker: Component found in the EC.
Oct 16 07:10:31.653 DEBUG: ec_worker: Component is in INACTIVE state. Going to ACTIVE state.
Oct 16 07:10:31.653 DEBUG: ec_worker: activateComponent() done.
Oct 16 07:10:31.653 DEBUG: ec_base: Synchronous activation mode. Waiting for the RTC to be ACTIVE state. 
Oct 16 07:10:31.653 TRACE: periodic_ec: onWaitingActivated(count = 0)
Oct 16 07:10:31.653 DEBUG: ec_base: Timeout is 0.500000 [s] (30.000000 [s] in 15 times)
Oct 16 07:10:31.653 TRACE: periodic_ec: onWaitingActivated(count = 0)
Oct 16 07:10:31.687 DEBUG: ec_base: Waiting to be ACTIVE state. 0.034359 [s] slept (0/15)
Oct 16 07:10:31.687 TRACE: periodic_ec: onWaitingActivated(count = 1)
Oct 16 07:10:31.688 TRACE: WebCamera0: on_activated(0)
Oct 16 07:10:31.688 TRACE: CameraImage: activateInterfaces()
Oct 16 07:10:31.689 TRACE: manager: Manager::getPOA()
Oct 16 07:10:31.722 DEBUG: ec_base: Waiting to be ACTIVE state. 0.068770 [s] slept (1/15)
Oct 16 07:10:31.722 DEBUG: ec_base: Current state is ACTIVE_STATE
Oct 16 07:10:31.722 TRACE: periodic_ec: onActivated(count = 2)
Oct 16 07:10:31.722 DEBUG: ec_base: onActivated() done.
Oct 16 07:10:32.205 ERROR: WebCamera0: Unable to open selected camera parameter file: ../../camera.yml
Oct 16 07:10:32.205 ERROR: WebCamera0: Camera parameters are set to zero
Oct 16 07:10:32.236 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.269 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.299 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.336 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.369 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.400 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.431 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.468 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.500 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.531 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.564 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.595 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.630 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.676 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.709 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.740 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.776 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.809 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.842 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.874 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.917 TRACE: CameraImage: DataType write()
Oct 16 07:10:32.960 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.005 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.044 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.100 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.142 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.192 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.247 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.291 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.346 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.400 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.440 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.487 TRACE: manager: Manager::shutdown()
Oct 16 07:10:33.487 TRACE: manager: Manager::shutdownComponents()
Oct 16 07:10:33.487 TRACE: WebCamera0: exit()
Oct 16 07:10:33.487 TRACE: ec_base: deactivateComponent()
Oct 16 07:10:33.487 TRACE: ec_worker: deactivateComponent()
Oct 16 07:10:33.487 DEBUG: ec_base: Synchronous deactivation mode. Waiting for the RTC to be INACTIVE state. 
Oct 16 07:10:33.487 TRACE: periodic_ec: onWaitingDeactivated(count = 0)
Oct 16 07:10:33.487 TRACE: periodic_ec: All RTCs are INACTIVE. Stopping worker thread.
Oct 16 07:10:33.487 DEBUG: ec_base: Timeout is 0.500000 [s] (30.000000 [s] in 15 times)
Oct 16 07:10:33.487 TRACE: periodic_ec: onWaitingDeactivated(count = 0)
Oct 16 07:10:33.495 TRACE: CameraImage: DataType write()
Oct 16 07:10:33.522 TRACE: WebCamera0: on_deactivated(0)
Oct 16 07:10:33.522 TRACE: CameraImage: deactivateInterfaces()
Oct 16 07:10:33.522 TRACE: manager: Manager::getPOA()
Oct 16 07:10:33.525 DEBUG: ec_base: Waiting to be INACTIVE state. Sleeping 0.037585 [s] (0/15)
Oct 16 07:10:33.525 DEBUG: ec_base: Current state is INACTIVE_STATE
Oct 16 07:10:33.525 TRACE: periodic_ec: onDeactivated(count = 1)
Oct 16 07:10:33.525 DEBUG: ec_base: onDeactivated() done.
Oct 16 07:10:33.525 TRACE: ec_base: stop()
Oct 16 07:10:33.525 TRACE: ec_worker: stop()
Oct 16 07:10:33.525 TRACE: WebCamera0: on_shutdown(0)
Oct 16 07:10:33.525 TRACE: WebCamera0: onShutdown(0)
Oct 16 07:10:33.525 TRACE: WebCamera0: finalize()
Oct 16 07:10:33.525 TRACE: WebCamera0: on_finalize()
Oct 16 07:10:33.525 TRACE: WebCamera0: shutdown()
Oct 16 07:10:33.525 TRACE: WebCamera0: finalizePorts()
Oct 16 07:10:33.525 TRACE: CameraImage: deactivateInterfaces()
Oct 16 07:10:33.525 TRACE: manager: Manager::getPOA()
Oct 16 07:10:33.525 TRACE: CameraImage: disconnect_all()
Oct 16 07:10:33.525 DEBUG: CameraImage: disconnecting 0 connections.
Oct 16 07:10:33.525 TRACE: CameraImage: getProfile()
Oct 16 07:10:33.525 TRACE: CameraImage: get_port_profile()
Oct 16 07:10:33.525 TRACE: CameraImage: setPortRef()
Oct 16 07:10:33.525 TRACE: CameraImage: getProfile()
Oct 16 07:10:33.525 TRACE: CameraCaptureService: disconnect_all()
Oct 16 07:10:33.525 DEBUG: CameraCaptureService: disconnecting 0 connections.
Oct 16 07:10:33.525 TRACE: CameraCaptureService: getProfile()
Oct 16 07:10:33.525 TRACE: CameraCaptureService: get_port_profile()
Oct 16 07:10:33.525 TRACE: CameraCaptureService: setPortRef()
Oct 16 07:10:33.525 TRACE: CameraCaptureService: getProfile()
Oct 16 07:10:33.525 TRACE: WebCamera0: finalizeContexts()
Oct 16 07:10:33.525 TRACE: periodic_ecprofile: getObjRef()
Oct 16 07:10:33.525 TRACE: ec_base: stop()
Oct 16 07:10:33.525 TRACE: ec_worker: stop()
Oct 16 07:10:33.525 WARNING: ec_worker: ExecutionContext is already stopped.
Oct 16 07:10:33.525 ERROR: ec_base: Invoking on_shutdown() for each RTC failed.
Oct 16 07:10:33.525 DEBUG: WebCamera0: Deactivating Execution Context.
Oct 16 07:10:33.525 DEBUG: WebCamera0: Deactivating EC done.
Oct 16 07:10:33.525 TRACE: periodic_ec: ~PeriodicExecutionContext()
Oct 16 07:10:33.544 TRACE: CameraImage: DataType write()
